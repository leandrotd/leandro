{"ast":null,"code":"import React from'react';import Async from'react-async';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var cargarJson=function cargarJson(){return fetch(\"https://jsonplaceholder.typicode.com/posts\").then(function(res){return res.ok?res:Promise.reject(res);}).then(function(res){return res.json();});};function App(){return/*#__PURE__*/_jsxs(Async,{promiseFn:cargarJson,children:[/*#__PURE__*/_jsx(Async.Fulfilled,{children:function children(data){return/*#__PURE__*/_jsxs(\"div\",{class:\"container-fluid\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"row\",children:/*#__PURE__*/_jsx(\"div\",{class:\"col text-center mt-3\",children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Posts\"})})})}),/*#__PURE__*/_jsx(\"div\",{class:\"row\",children:/*#__PURE__*/_jsx(\"div\",{class:\"col\",id:\"grid\",children:data.map(function(post){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",class:\"card\",id:\"card\"+post.id,children:/*#__PURE__*/_jsxs(\"div\",{class:\"card-body\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"card-title\",children:/*#__PURE__*/_jsx(\"h5\",{children:post.title})}),/*#__PURE__*/_jsxs(\"div\",{class:\"card-text\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Usuario: \",post.userId]}),/*#__PURE__*/_jsx(\"p\",{children:post.body})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",class:\"btn btn-danger\",onClick:function onClick(){var _document$getElementB;return(_document$getElementB=document.getElementById('card'+post.id))===null||_document$getElementB===void 0?void 0:_document$getElementB.remove();},children:/*#__PURE__*/_jsx(\"i\",{class:\"bi-x-lg\"})})})]})},post.id);})})})]});}}),/*#__PURE__*/_jsx(Async.Rejected,{children:function children(error){return\"Los posts no pudieron ser cargados: \".concat(error.message);}})]});}export default App;","map":{"version":3,"sources":["F:/asd/leandro/src/App.js"],"names":["React","Async","cargarJson","fetch","then","res","ok","Promise","reject","json","App","data","map","post","id","title","userId","body","document","getElementById","remove","error","message"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAO,WAAP,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SACjBC,CAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQ,SAAAC,GAAG,QAAKA,CAAAA,GAAG,CAACC,EAAJ,CAASD,GAAT,CAAeE,OAAO,CAACC,MAAR,CAAeH,GAAf,CAApB,EADX,EAEGD,IAFH,CAEQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACI,IAAJ,EAAJ,EAFX,CADiB,EAAnB,CAKA,QAASC,CAAAA,GAAT,EAAe,CACb,mBACE,MAAC,KAAD,EAAO,SAAS,CAAER,UAAlB,wBACE,KAAC,KAAD,CAAO,SAAP,WACG,kBAAAS,IAAI,CAAI,CACP,mBACE,aAAK,KAAK,CAAC,iBAAX,wBACE,YAAK,KAAK,CAAC,KAAX,uBACE,YAAK,KAAK,CAAC,sBAAX,uBACE,kCACE,6BADF,EADF,EADF,EADF,cAQE,YAAK,KAAK,CAAC,KAAX,uBACE,YAAK,KAAK,CAAC,KAAX,CAAiB,EAAE,CAAC,MAApB,UACGA,IAAI,CAACC,GAAL,CAAS,SAAAC,IAAI,qBACZ,YAAmB,SAAS,CAAC,KAA7B,CAAmC,KAAK,CAAC,MAAzC,CAAgD,EAAE,CAAE,OAASA,IAAI,CAACC,EAAlE,uBACE,aAAK,KAAK,CAAC,WAAX,wBACE,YAAK,KAAK,CAAC,YAAX,uBACE,oBAAKD,IAAI,CAACE,KAAV,EADF,EADF,cAIE,aAAK,KAAK,CAAC,WAAX,wBACE,iCACYF,IAAI,CAACG,MADjB,GADF,cAIE,mBACGH,IAAI,CAACI,IADR,EAJF,GAJF,cAYE,kCACE,eAAQ,IAAI,CAAC,QAAb,CAAsB,KAAK,CAAC,gBAA5B,CAA6C,OAAO,CAAE,0EAAMC,QAAQ,CAACC,cAAT,CAAwB,OAASN,IAAI,CAACC,EAAtC,CAAN,gDAAM,sBAA2CM,MAA3C,EAAN,EAAtD,uBACE,UAAG,KAAK,CAAC,SAAT,EADF,EADF,EAZF,GADF,EAAUP,IAAI,CAACC,EAAf,CADY,EAAb,CADH,EADF,EARF,GADF,CAqCD,CAvCH,EADF,cA0CE,KAAC,KAAD,CAAO,QAAP,WACG,kBAAAO,KAAK,sDAA2CA,KAAK,CAACC,OAAjD,GADR,EA1CF,GADF,CAgDD,CAED,cAAeZ,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport Async from 'react-async';\nimport './App.css';\n\nconst cargarJson = () =>\n  fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    .then(res => (res.ok ? res : Promise.reject(res)))\n    .then(res => res.json())\n\nfunction App() {\n  return (\n    <Async promiseFn={cargarJson}>\n      <Async.Fulfilled>\n        {data => {\n          return (\n            <div class=\"container-fluid\">\n              <div class=\"row\">\n                <div class=\"col text-center mt-3\">\n                  <div>\n                    <h2>Posts</h2>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col\" id=\"grid\">\n                  {data.map(post => (\n                    <div key={post.id} className=\"row\" class=\"card\" id={\"card\" + post.id}>\n                      <div class=\"card-body\">\n                        <div class=\"card-title\">\n                          <h5>{post.title}</h5>\n                        </div>\n                        <div class=\"card-text\">\n                          <p>\n                            Usuario: {post.userId}\n                          </p>\n                          <p>\n                            {post.body}\n                          </p>\n                        </div>\n                        <div>\n                          <button type=\"button\" class=\"btn btn-danger\" onClick={() => document.getElementById('card' + post.id)?.remove()}>\n                            <i class=\"bi-x-lg\"></i>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )\n        }}\n      </Async.Fulfilled>\n      <Async.Rejected>\n        {error => `Los posts no pudieron ser cargados: ${error.message}`}\n      </Async.Rejected>\n    </Async>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}