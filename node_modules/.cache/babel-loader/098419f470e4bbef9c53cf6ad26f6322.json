{"ast":null,"code":"var _jsxFileName = \"F:\\\\asd\\\\leandro\\\\src\\\\App.js\";\nimport React from 'react';\nimport Async from 'react-async';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cargarJson = () => fetch(\"https://jsonplaceholder.typicode.cm/posts\").then(res => res.ok ? res : Promise.reject(res)).then(res => res.json());\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Async, {\n    promiseFn: cargarJson,\n    children: [/*#__PURE__*/_jsxDEV(Async.Fulfilled, {\n      children: data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container-fluid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col text-center mt-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Posts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col\",\n              id: \"grid\",\n              children: data.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                class: \"card\",\n                id: \"card\" + post.id,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"card-title\",\n                    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: post.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 30,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 29,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"card-text\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Usuario: \", post.userId]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 33,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: post.body\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 36,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-danger\",\n                      onClick: () => {\n                        var _document$getElementB;\n\n                        return (_document$getElementB = document.getElementById('card' + post.id)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.remove();\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        class: \"bi-x-lg\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 42,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 41,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 23\n                }, this)\n              }, post.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Async.Rejected, {\n      children: error => `Los posts no pudieron ser cargados: ${error.message}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/asd/leandro/src/App.js"],"names":["React","Async","cargarJson","fetch","then","res","ok","Promise","reject","json","App","data","map","post","id","title","userId","body","document","getElementById","remove","error","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,UAAU,GAAG,MACjBC,KAAK,CAAC,2CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAKA,GAAG,CAACC,EAAJ,GAASD,GAAT,GAAeE,OAAO,CAACC,MAAR,CAAeH,GAAf,CAD/B,EAEGD,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACI,IAAJ,EAFf,CADF;;AAKA,SAASC,GAAT,GAAe;AACb,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAER,UAAlB;AAAA,4BACE,QAAC,KAAD,CAAO,SAAP;AAAA,gBACGS,IAAI,IAAI;AACP,4BACE;AAAK,UAAA,KAAK,EAAC,iBAAX;AAAA,kCACE;AAAK,YAAA,KAAK,EAAC,KAAX;AAAA,mCACE;AAAK,cAAA,KAAK,EAAC,sBAAX;AAAA,qCACE;AAAA,uCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAK,YAAA,KAAK,EAAC,KAAX;AAAA,mCACE;AAAK,cAAA,KAAK,EAAC,KAAX;AAAiB,cAAA,EAAE,EAAC,MAApB;AAAA,wBACGA,IAAI,CAACC,GAAL,CAASC,IAAI,iBACZ;AAAmB,gBAAA,SAAS,EAAC,KAA7B;AAAmC,gBAAA,KAAK,EAAC,MAAzC;AAAgD,gBAAA,EAAE,EAAE,SAASA,IAAI,CAACC,EAAlE;AAAA,uCACE;AAAK,kBAAA,KAAK,EAAC,WAAX;AAAA,0CACE;AAAK,oBAAA,KAAK,EAAC,YAAX;AAAA,2CACE;AAAA,gCAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAK,oBAAA,KAAK,EAAC,WAAX;AAAA,4CACE;AAAA,8CACYF,IAAI,CAACG,MADjB;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE;AAAA,gCACGH,IAAI,CAACI;AADR;AAAA;AAAA;AAAA;AAAA,4BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,eAYE;AAAA,2CACE;AAAQ,sBAAA,IAAI,EAAC,QAAb;AAAsB,sBAAA,KAAK,EAAC,gBAA5B;AAA6C,sBAAA,OAAO,EAAE;AAAA;;AAAA,wDAAMC,QAAQ,CAACC,cAAT,CAAwB,SAASN,IAAI,CAACC,EAAtC,CAAN,0DAAM,sBAA2CM,MAA3C,EAAN;AAAA,uBAAtD;AAAA,6CACE;AAAG,wBAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,iBAAUP,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAqCD;AAvCH;AAAA;AAAA;AAAA;AAAA,YADF,eA0CE,QAAC,KAAD,CAAO,QAAP;AAAA,gBACGO,KAAK,IAAK,uCAAsCA,KAAK,CAACC,OAAQ;AADjE;AAAA;AAAA;AAAA;AAAA,YA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;;KAjDQZ,G;AAmDT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport Async from 'react-async';\nimport './App.css';\n\nconst cargarJson = () =>\n  fetch(\"https://jsonplaceholder.typicode.cm/posts\")\n    .then(res => (res.ok ? res : Promise.reject(res)))\n    .then(res => res.json())\n\nfunction App() {\n  return (\n    <Async promiseFn={cargarJson}>\n      <Async.Fulfilled>\n        {data => {\n          return (\n            <div class=\"container-fluid\">\n              <div class=\"row\">\n                <div class=\"col text-center mt-3\">\n                  <div>\n                    <h2>Posts</h2>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col\" id=\"grid\">\n                  {data.map(post => (\n                    <div key={post.id} className=\"row\" class=\"card\" id={\"card\" + post.id}>\n                      <div class=\"card-body\">\n                        <div class=\"card-title\">\n                          <h5>{post.title}</h5>\n                        </div>\n                        <div class=\"card-text\">\n                          <p>\n                            Usuario: {post.userId}\n                          </p>\n                          <p>\n                            {post.body}\n                          </p>\n                        </div>\n                        <div>\n                          <button type=\"button\" class=\"btn btn-danger\" onClick={() => document.getElementById('card' + post.id)?.remove()}>\n                            <i class=\"bi-x-lg\"></i>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )\n        }}\n      </Async.Fulfilled>\n      <Async.Rejected>\n        {error => `Los posts no pudieron ser cargados: ${error.message}`}\n      </Async.Rejected>\n    </Async>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}