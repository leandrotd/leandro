{"ast":null,"code":"import React, { useEffect, useRef, useReducer, useCallback, useDebugValue, useMemo } from 'react';\n/* istanbul ignore file */\n\n/**\n * Universal global scope object. In the browser this is `self`, in Node.js and React Native it's `global`.\n * This file is excluded from coverage reporting because these globals are environment-specific so we can't test them all.\n */\n\nconst globalScope = (() => {\n  if (typeof self === \"object\" && self.self === self) return self;\n  if (typeof global === \"object\" && global.global === global) return global;\n  if (typeof global === \"object\" && global.GLOBAL === global) return global;\n  return {}; // fallback that relies on imported modules to be singletons\n})();\n/**\n * Globally available object used to connect the DevTools to all React Async instances.\n */\n\n\nglobalScope.__REACT_ASYNC__ = globalScope.__REACT_ASYNC__ || {};\n\nconst noop = () => {};\n\nclass MockAbortController {\n  constructor() {\n    this.abort = noop;\n    this.signal = {};\n  }\n\n}\n\nlet PropTypes;\n\ntry {\n  PropTypes = require(\"prop-types\");\n} catch (e) {}\n\nconst childrenFn = PropTypes && PropTypes.oneOfType([PropTypes.node, PropTypes.func]);\nconst stateObject = PropTypes && PropTypes.shape({\n  initialValue: PropTypes.any,\n  data: PropTypes.any,\n  error: PropTypes.instanceOf(Error),\n  value: PropTypes.any,\n  startedAt: PropTypes.instanceOf(Date),\n  finishedAt: PropTypes.instanceOf(Date),\n  status: PropTypes.oneOf([\"initial\", \"pending\", \"fulfilled\", \"rejected\"]),\n  isInitial: PropTypes.bool,\n  isPending: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isFulfilled: PropTypes.bool,\n  isResolved: PropTypes.bool,\n  isRejected: PropTypes.bool,\n  isSettled: PropTypes.bool,\n  counter: PropTypes.number,\n  promise: PropTypes.instanceOf(Promise),\n  run: PropTypes.func,\n  reload: PropTypes.func,\n  cancel: PropTypes.func,\n  setData: PropTypes.func,\n  setError: PropTypes.func\n});\nvar propTypes = PropTypes && {\n  Async: {\n    children: childrenFn,\n    promise: PropTypes.instanceOf(Promise),\n    promiseFn: PropTypes.func,\n    deferFn: PropTypes.func,\n    watch: PropTypes.any,\n    watchFn: PropTypes.func,\n    initialValue: PropTypes.any,\n    onResolve: PropTypes.func,\n    onReject: PropTypes.func,\n    reducer: PropTypes.func,\n    dispatcher: PropTypes.func,\n    debugLabel: PropTypes.string,\n    suspense: PropTypes.bool\n  },\n  Initial: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  },\n  Pending: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    initial: PropTypes.bool\n  },\n  Fulfilled: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  },\n  Rejected: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  },\n  Settled: {\n    children: childrenFn,\n    state: stateObject.isRequired,\n    persist: PropTypes.bool\n  }\n};\n\nconst renderFn = function (children) {\n  if (typeof children === \"function\") {\n    const render = children;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return render(...args);\n  }\n\n  return children;\n};\n/**\n * Renders only when no promise has started or completed yet.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show until we have data, even while pending (loading) or when an error occurred\n */\n\n\nconst IfInitial = _ref => {\n  let {\n    children,\n    persist,\n    state = {}\n  } = _ref;\n  return React.createElement(React.Fragment, null, state.isInitial || persist && !state.data ? renderFn(children, state) : null);\n};\n/**\n * Renders only while pending (promise is loading).\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} initial Show only on initial load (data is undefined)\n */\n\n\nconst IfPending = _ref2 => {\n  let {\n    children,\n    initial,\n    state = {}\n  } = _ref2;\n  return React.createElement(React.Fragment, null, state.isPending && (!initial || !state.value) ? renderFn(children, state) : null);\n};\n/**\n * Renders only when promise is resolved.\n *\n * @prop {Function|Node} children Function (passing data and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data while pending (promise is loading)\n */\n\n\nconst IfFulfilled = _ref3 => {\n  let {\n    children,\n    persist,\n    state = {}\n  } = _ref3;\n  return React.createElement(React.Fragment, null, state.isFulfilled || persist && state.data ? renderFn(children, state.data, state) : null);\n};\n/**\n * Renders only when promise is rejected.\n *\n * @prop {Function|Node} children Function (passing error and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old error while pending (promise is loading)\n */\n\n\nconst IfRejected = _ref4 => {\n  let {\n    children,\n    persist,\n    state = {}\n  } = _ref4;\n  return React.createElement(React.Fragment, null, state.isRejected || persist && state.error ? renderFn(children, state.error, state) : null);\n};\n/**\n * Renders only when promise is fulfilled or rejected.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data or error while pending (promise is loading)\n */\n\n\nconst IfSettled = _ref5 => {\n  let {\n    children,\n    persist,\n    state = {}\n  } = _ref5;\n  return React.createElement(React.Fragment, null, state.isSettled || persist && state.value ? renderFn(children, state) : null);\n};\n\nif (propTypes) {\n  IfInitial.propTypes = propTypes.Initial;\n  IfPending.propTypes = propTypes.Pending;\n  IfFulfilled.propTypes = propTypes.Fulfilled;\n  IfRejected.propTypes = propTypes.Rejected;\n  IfSettled.propTypes = propTypes.Settled;\n}\n\nvar StatusTypes;\n\n(function (StatusTypes) {\n  StatusTypes[\"initial\"] = \"initial\";\n  StatusTypes[\"pending\"] = \"pending\";\n  StatusTypes[\"fulfilled\"] = \"fulfilled\";\n  StatusTypes[\"rejected\"] = \"rejected\";\n})(StatusTypes || (StatusTypes = {}));\n\nconst getInitialStatus = (value, promise) => {\n  if (value instanceof Error) return StatusTypes.rejected;\n  if (value !== undefined) return StatusTypes.fulfilled;\n  if (promise) return StatusTypes.pending;\n  return StatusTypes.initial;\n};\n\nconst getIdleStatus = value => {\n  if (value instanceof Error) return StatusTypes.rejected;\n  if (value !== undefined) return StatusTypes.fulfilled;\n  return StatusTypes.initial;\n};\n\nconst getStatusProps = status => ({\n  status,\n  isInitial: status === StatusTypes.initial,\n  isPending: status === StatusTypes.pending,\n  isLoading: status === StatusTypes.pending,\n  isFulfilled: status === StatusTypes.fulfilled,\n  isResolved: status === StatusTypes.fulfilled,\n  isRejected: status === StatusTypes.rejected,\n  isSettled: status === StatusTypes.fulfilled || status === StatusTypes.rejected\n}); // This exists to make sure we don't hold any references to user-provided functions\n// The way NeverSettle extends from Promise is complicated, but can't be done differently because Babel doesn't support\n// extending built-in classes. See https://babeljs.io/docs/en/caveats/#classes\n\n\nconst NeverSettle = function () {};\n/* istanbul ignore next */\n\n\nif (Object.setPrototypeOf) {\n  Object.setPrototypeOf(NeverSettle, Promise);\n} else {\n  NeverSettle.__proto__ = Promise;\n}\n\nNeverSettle.prototype = Object.assign(Object.create(Promise.prototype), {\n  finally() {\n    return this;\n  },\n\n  catch() {\n    return this;\n  },\n\n  then() {\n    return this;\n  }\n\n});\nconst neverSettle = new NeverSettle();\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[\"start\"] = \"start\";\n  ActionTypes[\"cancel\"] = \"cancel\";\n  ActionTypes[\"fulfill\"] = \"fulfill\";\n  ActionTypes[\"reject\"] = \"reject\";\n})(ActionTypes || (ActionTypes = {}));\n\nconst init = _ref6 => {\n  let {\n    initialValue,\n    promise,\n    promiseFn\n  } = _ref6;\n  return {\n    initialValue,\n    data: initialValue instanceof Error ? undefined : initialValue,\n    error: initialValue instanceof Error ? initialValue : undefined,\n    value: initialValue,\n    startedAt: promise || promiseFn ? new Date() : undefined,\n    finishedAt: initialValue ? new Date() : undefined,\n    ...getStatusProps(getInitialStatus(initialValue, promise || promiseFn)),\n    counter: 0,\n    promise: neverSettle\n  };\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.start:\n      return { ...state,\n        startedAt: new Date(),\n        finishedAt: undefined,\n        ...getStatusProps(StatusTypes.pending),\n        counter: action.meta.counter,\n        promise: action.meta.promise\n      };\n\n    case ActionTypes.cancel:\n      return { ...state,\n        startedAt: undefined,\n        finishedAt: undefined,\n        ...getStatusProps(getIdleStatus(state.error || state.data)),\n        counter: action.meta.counter,\n        promise: action.meta.promise\n      };\n\n    case ActionTypes.fulfill:\n      return { ...state,\n        data: action.payload,\n        value: action.payload,\n        error: undefined,\n        finishedAt: new Date(),\n        ...getStatusProps(StatusTypes.fulfilled),\n        promise: action.meta.promise\n      };\n\n    case ActionTypes.reject:\n      return { ...state,\n        error: action.payload,\n        value: action.payload,\n        finishedAt: new Date(),\n        ...getStatusProps(StatusTypes.rejected),\n        promise: action.meta.promise\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst dispatchMiddleware = dispatch => function (action) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  dispatch(action, ...args);\n\n  if (action.type === ActionTypes.start && typeof action.payload === \"function\") {\n    action.payload();\n  }\n};\n\nclass Async extends React.Component {}\n/**\n * createInstance allows you to create instances of Async that are bound to a specific promise.\n * A unique instance also uses its own React context for better nesting capability.\n */\n\n\nfunction createInstance() {\n  let defaultOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let displayName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Async\";\n  const {\n    Consumer: UnguardedConsumer,\n    Provider\n  } = React.createContext(undefined);\n\n  function Consumer(_ref7) {\n    let {\n      children\n    } = _ref7;\n    return React.createElement(UnguardedConsumer, null, value => {\n      if (!value) {\n        throw new Error(\"this component should only be used within an associated <Async> component!\");\n      }\n\n      return children(value);\n    });\n  }\n\n  class Async extends React.Component {\n    constructor(props) {\n      super(props);\n      this.mounted = false;\n      this.counter = 0;\n      this.args = [];\n      this.promise = neverSettle;\n      this.abortController = new MockAbortController();\n      this.start = this.start.bind(this);\n      this.load = this.load.bind(this);\n      this.run = this.run.bind(this);\n      this.cancel = this.cancel.bind(this);\n      this.onResolve = this.onResolve.bind(this);\n      this.onReject = this.onReject.bind(this);\n      this.setData = this.setData.bind(this);\n      this.setError = this.setError.bind(this);\n      const promise = props.promise;\n      const promiseFn = props.promiseFn || defaultOptions.promiseFn;\n      const initialValue = props.initialValue || defaultOptions.initialValue;\n      this.state = { ...init({\n          initialValue,\n          promise,\n          promiseFn\n        }),\n        cancel: this.cancel,\n        run: this.run,\n        reload: () => {\n          this.load();\n          this.run(...this.args);\n        },\n        setData: this.setData,\n        setError: this.setError\n      };\n      this.debugLabel = props.debugLabel || defaultOptions.debugLabel;\n      const {\n        devToolsDispatcher\n      } = globalScope.__REACT_ASYNC__;\n\n      const _reducer = props.reducer || defaultOptions.reducer;\n\n      const _dispatcher = props.dispatcher || defaultOptions.dispatcher || devToolsDispatcher;\n\n      const reducer$1 = _reducer ? (state, action) => _reducer(state, action, reducer) : reducer;\n      const dispatch = dispatchMiddleware((action, callback) => {\n        this.setState(state => reducer$1(state, action), callback);\n      });\n      this.dispatch = _dispatcher ? action => _dispatcher(action, dispatch, props) : dispatch;\n    }\n\n    componentDidMount() {\n      this.mounted = true;\n\n      if (this.props.promise || !this.state.initialValue) {\n        this.load();\n      }\n    }\n\n    componentDidUpdate(prevProps) {\n      const {\n        watch,\n        watchFn = defaultOptions.watchFn,\n        promise,\n        promiseFn\n      } = this.props;\n\n      if (watch !== prevProps.watch) {\n        if (this.counter) this.cancel();\n        return this.load();\n      }\n\n      if (watchFn && watchFn({ ...defaultOptions,\n        ...this.props\n      }, { ...defaultOptions,\n        ...prevProps\n      })) {\n        if (this.counter) this.cancel();\n        return this.load();\n      }\n\n      if (promise !== prevProps.promise) {\n        if (this.counter) this.cancel();\n        if (promise) return this.load();\n      }\n\n      if (promiseFn !== prevProps.promiseFn) {\n        if (this.counter) this.cancel();\n        if (promiseFn) return this.load();\n      }\n    }\n\n    componentWillUnmount() {\n      this.cancel();\n      this.mounted = false;\n    }\n\n    getMeta(meta) {\n      return {\n        counter: this.counter,\n        promise: this.promise,\n        debugLabel: this.debugLabel,\n        ...meta\n      };\n    }\n\n    start(promiseFn) {\n      if (\"AbortController\" in globalScope) {\n        this.abortController.abort();\n        this.abortController = new globalScope.AbortController();\n      }\n\n      this.counter++;\n      return this.promise = new Promise((resolve, reject) => {\n        if (!this.mounted) return;\n\n        const executor = () => promiseFn().then(resolve, reject);\n\n        this.dispatch({\n          type: ActionTypes.start,\n          payload: executor,\n          meta: this.getMeta()\n        });\n      });\n    }\n\n    load() {\n      const promise = this.props.promise;\n      const promiseFn = this.props.promiseFn || defaultOptions.promiseFn;\n\n      if (promise) {\n        this.start(() => promise).then(this.onResolve(this.counter)).catch(this.onReject(this.counter));\n      } else if (promiseFn) {\n        const props = { ...defaultOptions,\n          ...this.props\n        };\n        this.start(() => promiseFn(props, this.abortController)).then(this.onResolve(this.counter)).catch(this.onReject(this.counter));\n      }\n    }\n\n    run() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      const deferFn = this.props.deferFn || defaultOptions.deferFn;\n\n      if (deferFn) {\n        this.args = args;\n        const props = { ...defaultOptions,\n          ...this.props\n        };\n        return this.start(() => deferFn(args, props, this.abortController)).then(this.onResolve(this.counter), this.onReject(this.counter));\n      }\n    }\n\n    cancel() {\n      const onCancel = this.props.onCancel || defaultOptions.onCancel;\n      onCancel && onCancel();\n      this.counter++;\n      this.abortController.abort();\n      this.mounted && this.dispatch({\n        type: ActionTypes.cancel,\n        meta: this.getMeta()\n      });\n    }\n\n    onResolve(counter) {\n      return data => {\n        if (this.counter === counter) {\n          const onResolve = this.props.onResolve || defaultOptions.onResolve;\n          this.setData(data, () => onResolve && onResolve(data));\n        }\n\n        return data;\n      };\n    }\n\n    onReject(counter) {\n      return error => {\n        if (this.counter === counter) {\n          const onReject = this.props.onReject || defaultOptions.onReject;\n          this.setError(error, () => onReject && onReject(error));\n        }\n\n        return error;\n      };\n    }\n\n    setData(data, callback) {\n      this.mounted && this.dispatch({\n        type: ActionTypes.fulfill,\n        payload: data,\n        meta: this.getMeta()\n      }, callback);\n      return data;\n    }\n\n    setError(error, callback) {\n      this.mounted && this.dispatch({\n        type: ActionTypes.reject,\n        payload: error,\n        error: true,\n        meta: this.getMeta()\n      }, callback);\n      return error;\n    }\n\n    render() {\n      const {\n        children,\n        suspense\n      } = this.props;\n\n      if (suspense && this.state.isPending && this.promise !== neverSettle) {\n        // Rely on Suspense to handle the loading state\n        throw this.promise;\n      }\n\n      if (typeof children === \"function\") {\n        const render = children;\n        return React.createElement(Provider, {\n          value: this.state\n        }, render(this.state));\n      }\n\n      if (children !== undefined && children !== null) {\n        return React.createElement(Provider, {\n          value: this.state\n        }, children);\n      }\n\n      return null;\n    }\n\n  }\n\n  if (propTypes) Async.propTypes = propTypes.Async;\n\n  const AsyncInitial = props => React.createElement(Consumer, null, st => React.createElement(IfInitial, Object.assign({}, props, {\n    state: st\n  })));\n\n  const AsyncPending = props => React.createElement(Consumer, null, st => React.createElement(IfPending, Object.assign({}, props, {\n    state: st\n  })));\n\n  const AsyncFulfilled = props => React.createElement(Consumer, null, st => React.createElement(IfFulfilled, Object.assign({}, props, {\n    state: st\n  })));\n\n  const AsyncRejected = props => React.createElement(Consumer, null, st => React.createElement(IfRejected, Object.assign({}, props, {\n    state: st\n  })));\n\n  const AsyncSettled = props => React.createElement(Consumer, null, st => React.createElement(IfSettled, Object.assign({}, props, {\n    state: st\n  })));\n\n  AsyncInitial.displayName = `${displayName}.Initial`;\n  AsyncPending.displayName = `${displayName}.Pending`;\n  AsyncFulfilled.displayName = `${displayName}.Fulfilled`;\n  AsyncRejected.displayName = `${displayName}.Rejected`;\n  AsyncSettled.displayName = `${displayName}.Settled`;\n  return Object.assign(Async, {\n    displayName: displayName,\n    Initial: AsyncInitial,\n    Pending: AsyncPending,\n    Loading: AsyncPending,\n    Fulfilled: AsyncFulfilled,\n    Resolved: AsyncFulfilled,\n    Rejected: AsyncRejected,\n    Settled: AsyncSettled\n  });\n}\n\nvar Async$1 = createInstance();\n\nfunction useAsync(arg1, arg2) {\n  const options = typeof arg1 === \"function\" ? { ...arg2,\n    promiseFn: arg1\n  } : arg1;\n  const counter = useRef(0);\n  const isMounted = useRef(true);\n  const lastArgs = useRef(undefined);\n  const lastOptions = useRef(options);\n  const lastPromise = useRef(neverSettle);\n  const abortController = useRef(new MockAbortController());\n  const {\n    devToolsDispatcher\n  } = globalScope.__REACT_ASYNC__;\n  const {\n    reducer: reducer$1,\n    dispatcher = devToolsDispatcher\n  } = options;\n  const [state, _dispatch] = useReducer(reducer$1 ? (state, action) => reducer$1(state, action, reducer) : reducer, options, init);\n  const dispatch = useCallback(dispatcher ? action => dispatcher(action, dispatchMiddleware(_dispatch), lastOptions.current) : dispatchMiddleware(_dispatch), [dispatcher]);\n  const {\n    debugLabel\n  } = options;\n  const getMeta = useCallback(meta => ({\n    counter: counter.current,\n    promise: lastPromise.current,\n    debugLabel,\n    ...meta\n  }), [debugLabel]);\n  const setData = useCallback(function (data) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n\n    if (isMounted.current) {\n      dispatch({\n        type: ActionTypes.fulfill,\n        payload: data,\n        meta: getMeta()\n      });\n      callback();\n    }\n\n    return data;\n  }, [dispatch, getMeta]);\n  const setError = useCallback(function (error) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n\n    if (isMounted.current) {\n      dispatch({\n        type: ActionTypes.reject,\n        payload: error,\n        error: true,\n        meta: getMeta()\n      });\n      callback();\n    }\n\n    return error;\n  }, [dispatch, getMeta]);\n  const {\n    onResolve,\n    onReject\n  } = options;\n  const handleResolve = useCallback(count => data => count === counter.current && setData(data, () => onResolve && onResolve(data)), [setData, onResolve]);\n  const handleReject = useCallback(count => err => count === counter.current && setError(err, () => onReject && onReject(err)), [setError, onReject]);\n  const start = useCallback(promiseFn => {\n    if (\"AbortController\" in globalScope) {\n      abortController.current.abort();\n      abortController.current = new globalScope.AbortController();\n    }\n\n    counter.current++;\n    return lastPromise.current = new Promise((resolve, reject) => {\n      if (!isMounted.current) return;\n\n      const executor = () => promiseFn().then(resolve, reject);\n\n      dispatch({\n        type: ActionTypes.start,\n        payload: executor,\n        meta: getMeta()\n      });\n    });\n  }, [dispatch, getMeta]);\n  const {\n    promise,\n    promiseFn,\n    initialValue\n  } = options;\n  const load = useCallback(() => {\n    const isPreInitialized = initialValue && counter.current === 0;\n\n    if (promise) {\n      start(() => promise).then(handleResolve(counter.current)).catch(handleReject(counter.current));\n    } else if (promiseFn && !isPreInitialized) {\n      start(() => promiseFn(lastOptions.current, abortController.current)).then(handleResolve(counter.current)).catch(handleReject(counter.current));\n    }\n  }, [start, promise, promiseFn, initialValue, handleResolve, handleReject]);\n  const {\n    deferFn\n  } = options;\n  const run = useCallback(function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    if (deferFn) {\n      lastArgs.current = args;\n      start(() => deferFn(args, lastOptions.current, abortController.current)).then(handleResolve(counter.current)).catch(handleReject(counter.current));\n    }\n  }, [start, deferFn, handleResolve, handleReject]);\n  const reload = useCallback(() => {\n    lastArgs.current ? run(...lastArgs.current) : load();\n  }, [run, load]);\n  const {\n    onCancel\n  } = options;\n  const cancel = useCallback(() => {\n    onCancel && onCancel();\n    counter.current++;\n    abortController.current.abort();\n    isMounted.current && dispatch({\n      type: ActionTypes.cancel,\n      meta: getMeta()\n    });\n  }, [onCancel, dispatch, getMeta]);\n  /* These effects should only be triggered on changes to specific props */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  const {\n    watch,\n    watchFn\n  } = options;\n  useEffect(() => {\n    if (watchFn && lastOptions.current && watchFn(options, lastOptions.current)) {\n      lastOptions.current = options;\n      load();\n    }\n  });\n  useEffect(() => {\n    lastOptions.current = options;\n  }, [options]);\n  useEffect(() => {\n    if (counter.current) cancel();\n    if (promise || promiseFn) load();\n  }, [promise, promiseFn, watch]);\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n  useEffect(() => () => cancel(), []);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  useDebugValue(state, _ref8 => {\n    let {\n      status\n    } = _ref8;\n    return `[${counter.current}] ${status}`;\n  });\n\n  if (options.suspense && state.isPending && lastPromise.current !== neverSettle) {\n    // Rely on Suspense to handle the loading state\n    throw lastPromise.current;\n  }\n\n  return useMemo(() => ({ ...state,\n    run,\n    reload,\n    cancel,\n    setData,\n    setError\n  }), [state, run, reload, cancel, setData, setError]);\n}\n\nclass FetchError extends Error {\n  constructor(response) {\n    super(`${response.status} ${response.statusText}`);\n    this.response = response;\n    /* istanbul ignore next */\n\n    if (Object.setPrototypeOf) {\n      // Not available in IE 10, but can be polyfilled\n      Object.setPrototypeOf(this, FetchError.prototype);\n    }\n  }\n\n}\n\nconst parseResponse = (accept, json) => res => {\n  if (!res.ok) return Promise.reject(new FetchError(res));\n  if (typeof json === \"boolean\") return json ? res.json() : res;\n  return accept === \"application/json\" ? res.json() : res;\n};\n\nfunction isEvent(e) {\n  return typeof e === \"object\" && \"preventDefault\" in e;\n}\n/**\n *\n * @param {RequestInfo} resource\n * @param {RequestInit} init\n * @param {FetchOptions} options\n * @returns {AsyncState<T, FetchRun<T>>}\n */\n\n\nfunction useAsyncFetch(resource, init) {\n  let {\n    defer,\n    json,\n    ...options\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const method = resource.method || init && init.method;\n  const headers = resource.headers || init && init.headers || {};\n  const accept = headers[\"Accept\"] || headers[\"accept\"] || headers.get && headers.get(\"accept\");\n\n  const doFetch = (input, init) => globalScope.fetch(input, init).then(parseResponse(accept, json));\n\n  const isDefer = typeof defer === \"boolean\" ? defer : [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].indexOf(method) !== -1;\n  const fn = isDefer ? \"deferFn\" : \"promiseFn\";\n  const identity = JSON.stringify({\n    resource,\n    init,\n    isDefer\n  });\n  const promiseFn = useCallback((_, _ref9) => {\n    let {\n      signal\n    } = _ref9;\n    return doFetch(resource, {\n      signal,\n      ...init\n    });\n  }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  const deferFn = useCallback(function (_ref10, _, _ref11) {\n    let [override] = _ref10;\n    let {\n      signal\n    } = _ref11;\n\n    if (!override || isEvent(override)) {\n      return doFetch(resource, {\n        signal,\n        ...init\n      });\n    }\n\n    if (typeof override === \"function\") {\n      const {\n        resource: runResource,\n        ...runInit\n      } = override({\n        resource,\n        signal,\n        ...init\n      });\n      return doFetch(runResource || resource, {\n        signal,\n        ...runInit\n      });\n    }\n\n    const {\n      resource: runResource,\n      ...runInit\n    } = override;\n    return doFetch(runResource || resource, {\n      signal,\n      ...init,\n      ...runInit\n    });\n  }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  const state = useAsync({ ...options,\n    [fn]: isDefer ? deferFn : promiseFn\n  });\n  useDebugValue(state, _ref12 => {\n    let {\n      counter,\n      status\n    } = _ref12;\n    return `[${counter}] ${status}`;\n  });\n  return state;\n}\n\nconst unsupported = () => {\n  throw new Error(\"useAsync requires React v16.8 or up. Upgrade your React version or use the <Async> component instead.\");\n};\n\nvar useAsync$1 = useEffect ? useAsync : unsupported;\nconst useFetch = useEffect ? useAsyncFetch : unsupported;\nexport default Async$1;\nexport { ActionTypes, Async$1 as Async, FetchError, IfFulfilled, IfInitial, IfPending, IfRejected, IfSettled, StatusTypes, createInstance, dispatchMiddleware, globalScope, init, neverSettle, reducer, useAsync$1 as useAsync, useFetch };","map":{"version":3,"mappings":";AAAA;;;;;;;AAKA,MAAMA,WAAW,GAAG,CAAC,MAAM;AACvB,MAAI,OAAOC,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACA,IAAL,KAAcA,IAA9C,EACI,OAAOA,IAAP;AACJ,MAAI,OAAOC,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACA,MAAP,KAAkBA,MAApD,EACI,OAAOA,MAAP;AACJ,MAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,MAAP,KAAkBD,MAApD,EACI,OAAOA,MAAP;AACJ,SAAO,EAAP,CAPuB,CAOb;AACb,CARmB,GAApB;;;;;;AAYAF,WAAW,CAACI,eAAZ,GAA8BJ,WAAW,CAACI,eAAZ,IAA+B,EAA7D;;AACO,MAAMC,IAAI,GAAG,MAAM,CAAG,CAAtB;;AACP,MAAaC,mBAAN,CAA0B;AAC7BC,aAAW,GAAG;AACV,SAAKC,KAAL,GAAaH,IAAb;AACA,SAAKI,MAAL,GAAc,EAAd;AACH;;AAJ4B;;ACnBjC,IAAIC,SAAJ;;AACA,IAAI;AACAA,WAAS,GAAGC,OAAO,CAAC,YAAD,CAAnB;AACH,CAFD,CAGA,OAAOC,CAAP,EAAU,CAAG;;AACb,MAAMC,UAAU,GAAGH,SAAS,IAAIA,SAAS,CAACI,SAAV,CAAoB,CAACJ,SAAS,CAACK,IAAX,EAAiBL,SAAS,CAACM,IAA3B,CAApB,CAAhC;AACA,MAAMC,WAAW,GAAGP,SAAS,IACzBA,SAAS,CAACQ,KAAV,CAAgB;AACZC,cAAY,EAAET,SAAS,CAACU,GADZ;AAEZC,MAAI,EAAEX,SAAS,CAACU,GAFJ;AAGZE,OAAK,EAAEZ,SAAS,CAACa,UAAV,CAAqBC,KAArB,CAHK;AAIZC,OAAK,EAAEf,SAAS,CAACU,GAJL;AAKZM,WAAS,EAAEhB,SAAS,CAACa,UAAV,CAAqBI,IAArB,CALC;AAMZC,YAAU,EAAElB,SAAS,CAACa,UAAV,CAAqBI,IAArB,CANA;AAOZE,QAAM,EAAEnB,SAAS,CAACoB,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,WAAvB,EAAoC,UAApC,CAAhB,CAPI;AAQZC,WAAS,EAAErB,SAAS,CAACsB,IART;AASZC,WAAS,EAAEvB,SAAS,CAACsB,IATT;AAUZE,WAAS,EAAExB,SAAS,CAACsB,IAVT;AAWZG,aAAW,EAAEzB,SAAS,CAACsB,IAXX;AAYZI,YAAU,EAAE1B,SAAS,CAACsB,IAZV;AAaZK,YAAU,EAAE3B,SAAS,CAACsB,IAbV;AAcZM,WAAS,EAAE5B,SAAS,CAACsB,IAdT;AAeZO,SAAO,EAAE7B,SAAS,CAAC8B,MAfP;AAgBZC,SAAO,EAAE/B,SAAS,CAACa,UAAV,CAAqBmB,OAArB,CAhBG;AAiBZC,KAAG,EAAEjC,SAAS,CAACM,IAjBH;AAkBZ4B,QAAM,EAAElC,SAAS,CAACM,IAlBN;AAmBZ6B,QAAM,EAAEnC,SAAS,CAACM,IAnBN;AAoBZ8B,SAAO,EAAEpC,SAAS,CAACM,IApBP;AAqBZ+B,UAAQ,EAAErC,SAAS,CAACM;AArBR,CAAhB,CADJ;AAwBA,gBAAeN,SAAS,IAAI;AACxBsC,OAAK,EAAE;AACHC,YAAQ,EAAEpC,UADP;AAEH4B,WAAO,EAAE/B,SAAS,CAACa,UAAV,CAAqBmB,OAArB,CAFN;AAGHQ,aAAS,EAAExC,SAAS,CAACM,IAHlB;AAIHmC,WAAO,EAAEzC,SAAS,CAACM,IAJhB;AAKHoC,SAAK,EAAE1C,SAAS,CAACU,GALd;AAMHiC,WAAO,EAAE3C,SAAS,CAACM,IANhB;AAOHG,gBAAY,EAAET,SAAS,CAACU,GAPrB;AAQHkC,aAAS,EAAE5C,SAAS,CAACM,IARlB;AASHuC,YAAQ,EAAE7C,SAAS,CAACM,IATjB;AAUHwC,WAAO,EAAE9C,SAAS,CAACM,IAVhB;AAWHyC,cAAU,EAAE/C,SAAS,CAACM,IAXnB;AAYH0C,cAAU,EAAEhD,SAAS,CAACiD,MAZnB;AAaHC,YAAQ,EAAElD,SAAS,CAACsB;AAbjB,GADiB;AAgBxB6B,SAAO,EAAE;AACLZ,YAAQ,EAAEpC,UADL;AAELiD,SAAK,EAAE7C,WAAW,CAAC8C,UAFd;AAGLC,WAAO,EAAEtD,SAAS,CAACsB;AAHd,GAhBe;AAqBxBiC,SAAO,EAAE;AACLhB,YAAQ,EAAEpC,UADL;AAELiD,SAAK,EAAE7C,WAAW,CAAC8C,UAFd;AAGLG,WAAO,EAAExD,SAAS,CAACsB;AAHd,GArBe;AA0BxBmC,WAAS,EAAE;AACPlB,YAAQ,EAAEpC,UADH;AAEPiD,SAAK,EAAE7C,WAAW,CAAC8C,UAFZ;AAGPC,WAAO,EAAEtD,SAAS,CAACsB;AAHZ,GA1Ba;AA+BxBoC,UAAQ,EAAE;AACNnB,YAAQ,EAAEpC,UADJ;AAENiD,SAAK,EAAE7C,WAAW,CAAC8C,UAFb;AAGNC,WAAO,EAAEtD,SAAS,CAACsB;AAHb,GA/Bc;AAoCxBqC,SAAO,EAAE;AACLpB,YAAQ,EAAEpC,UADL;AAELiD,SAAK,EAAE7C,WAAW,CAAC8C,UAFd;AAGLC,WAAO,EAAEtD,SAAS,CAACsB;AAHd;AApCe,CAA5B;;AC5BA,MAAMsC,QAAQ,GAAG,UAACrB,QAAD,EAAuB;AACpC,MAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAChC,UAAMsB,MAAM,GAAGtB,QAAf;;AADgC,sCADTuB,IACS;AADTA,UACS;AAAA;;AAEhC,WAAOD,MAAM,CAAC,GAAGC,IAAJ,CAAb;AACH;;AACD,SAAOvB,QAAP;AACH,CAND;;;;;;;;;;AAcA,MAAawB,SAAS,GAAG;AAAA,MAAC;AAAExB,YAAF;AAAYe,WAAZ;AAAqBF,SAAK,GAAG;AAA7B,GAAD;AAAA,SAAwCY,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,QAA1B,EAAoC,IAApC,EAA0Cd,KAAK,CAAC/B,SAAN,IAAoBiC,OAAO,IAAI,CAACF,KAAK,CAACzC,IAAtC,GAA8CiD,QAAQ,CAACrB,QAAD,EAAWa,KAAX,CAAtD,GAA0E,IAApH,CAAxC;AAAA,CAAzB;;;;;;;;;;AAQA,MAAae,SAAS,GAAG;AAAA,MAAC;AAAE5B,YAAF;AAAYiB,WAAZ;AAAqBJ,SAAK,GAAG;AAA7B,GAAD;AAAA,SAAwCY,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,QAA1B,EAAoC,IAApC,EAA0Cd,KAAK,CAAC7B,SAAN,KAAoB,CAACiC,OAAD,IAAY,CAACJ,KAAK,CAACrC,KAAvC,IAAgD6C,QAAQ,CAACrB,QAAD,EAAWa,KAAX,CAAxD,GAA4E,IAAtH,CAAxC;AAAA,CAAzB;;;;;;;;;;AAQA,MAAagB,WAAW,GAAG;AAAA,MAAC;AAAE7B,YAAF;AAAYe,WAAZ;AAAqBF,SAAK,GAAG;AAA7B,GAAD;AAAA,SAAyCY,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,QAA1B,EAAoC,IAApC,EAA0Cd,KAAK,CAAC3B,WAAN,IAAsB6B,OAAO,IAAIF,KAAK,CAACzC,IAAvC,GAA+CiD,QAAQ,CAACrB,QAAD,EAAWa,KAAK,CAACzC,IAAjB,EAAuByC,KAAvB,CAAvD,GAAuF,IAAjI,CAAzC;AAAA,CAA3B;;;;;;;;;;AAQA,MAAaiB,UAAU,GAAG;AAAA,MAAC;AAAE9B,YAAF;AAAYe,WAAZ;AAAqBF,SAAK,GAAG;AAA7B,GAAD;AAAA,SAAyCY,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,QAA1B,EAAoC,IAApC,EAA0Cd,KAAK,CAACzB,UAAN,IAAqB2B,OAAO,IAAIF,KAAK,CAACxC,KAAtC,GAA+CgD,QAAQ,CAACrB,QAAD,EAAWa,KAAK,CAACxC,KAAjB,EAAwBwC,KAAxB,CAAvD,GAAwF,IAAlI,CAAzC;AAAA,CAA1B;;;;;;;;;;AAQA,MAAakB,SAAS,GAAG;AAAA,MAAC;AAAE/B,YAAF;AAAYe,WAAZ;AAAqBF,SAAK,GAAG;AAA7B,GAAD;AAAA,SAAwCY,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,QAA1B,EAAoC,IAApC,EAA0Cd,KAAK,CAACxB,SAAN,IAAoB0B,OAAO,IAAIF,KAAK,CAACrC,KAArC,GAA8C6C,QAAQ,CAACrB,QAAD,EAAWa,KAAX,CAAtD,GAA0E,IAApH,CAAxC;AAAA,CAAzB;;AACA,IAAImB,SAAJ,EAAe;AACXR,WAAS,CAACQ,SAAV,GAAsBA,SAAS,CAACpB,OAAhC;AACAgB,WAAS,CAACI,SAAV,GAAsBA,SAAS,CAAChB,OAAhC;AACAa,aAAW,CAACG,SAAZ,GAAwBA,SAAS,CAACd,SAAlC;AACAY,YAAU,CAACE,SAAX,GAAuBA,SAAS,CAACb,QAAjC;AACAY,WAAS,CAACC,SAAV,GAAsBA,SAAS,CAACZ,OAAhC;AACH;;ACvDS,IAACa,WAAD;;AACV,CAAC,UAAUA,WAAV,EAAuB;AACpBA,aAAW,CAAC,SAAD,CAAX,GAAyB,SAAzB;AACAA,aAAW,CAAC,SAAD,CAAX,GAAyB,SAAzB;AACAA,aAAW,CAAC,WAAD,CAAX,GAA2B,WAA3B;AACAA,aAAW,CAAC,UAAD,CAAX,GAA0B,UAA1B;AACH,CALD,EAKGA,WAAW,KAAKA,WAAW,GAAG,EAAnB,CALd;;AAMO,MAAMC,gBAAgB,GAAG,CAAC1D,KAAD,EAAQgB,OAAR,KAAoB;AAChD,MAAIhB,KAAK,YAAYD,KAArB,EACI,OAAO0D,WAAW,CAACE,QAAnB;AACJ,MAAI3D,KAAK,KAAK4D,SAAd,EACI,OAAOH,WAAW,CAACI,SAAnB;AACJ,MAAI7C,OAAJ,EACI,OAAOyC,WAAW,CAACK,OAAnB;AACJ,SAAOL,WAAW,CAAChB,OAAnB;AACH,CARM;;AASA,MAAMsB,aAAa,GAAI/D,KAAD,IAAW;AACpC,MAAIA,KAAK,YAAYD,KAArB,EACI,OAAO0D,WAAW,CAACE,QAAnB;AACJ,MAAI3D,KAAK,KAAK4D,SAAd,EACI,OAAOH,WAAW,CAACI,SAAnB;AACJ,SAAOJ,WAAW,CAAChB,OAAnB;AACH,CANM;;AAOA,MAAMuB,cAAc,GAAI5D,MAAD,KAAa;AACvCA,QADuC;AAEvCE,WAAS,EAAEF,MAAM,KAAKqD,WAAW,CAAChB,OAFK;AAGvCjC,WAAS,EAAEJ,MAAM,KAAKqD,WAAW,CAACK,OAHK;AAIvCrD,WAAS,EAAEL,MAAM,KAAKqD,WAAW,CAACK,OAJK;AAKvCpD,aAAW,EAAEN,MAAM,KAAKqD,WAAW,CAACI,SALG;AAMvClD,YAAU,EAAEP,MAAM,KAAKqD,WAAW,CAACI,SANI;AAOvCjD,YAAU,EAAER,MAAM,KAAKqD,WAAW,CAACE,QAPI;AAQvC9C,WAAS,EAAET,MAAM,KAAKqD,WAAW,CAACI,SAAvB,IAAoCzD,MAAM,KAAKqD,WAAW,CAACE;AAR/B,CAAb,CAA9B,C,CCtBA;;;;;AAGA,MAAMM,WAAW,GAAG,YAAY,CAAG,CAAnC;;;;AAEA,IAAIC,MAAM,CAACC,cAAX,EAA2B;AACvBD,QAAM,CAACC,cAAP,CAAsBF,WAAtB,EAAmChD,OAAnC;AACH,CAFD,MAGK;AAEDgD,aAAW,CAACG,SAAZ,GAAwBnD,OAAxB;AACH;;AACDgD,WAAW,CAACI,SAAZ,GAAwBH,MAAM,CAACI,MAAP,CAAcJ,MAAM,CAACK,MAAP,CAActD,OAAO,CAACoD,SAAtB,CAAd,EAAgD;AACpEG,SAAO,GAAG;AACN,WAAO,IAAP;AACH,GAHmE;;AAIpEC,OAAK,GAAG;AACJ,WAAO,IAAP;AACH,GANmE;;AAOpEC,MAAI,GAAG;AACH,WAAO,IAAP;AACH;;AATmE,CAAhD,CAAxB;AAWY,MAACC,WAAW,GAAG,IAAIV,WAAJ,EAA3B;AACA,IAAWW,WAAD;;AACV,CAAC,UAAUA,WAAV,EAAuB;AACpBA,aAAW,CAAC,OAAD,CAAX,GAAuB,OAAvB;AACAA,aAAW,CAAC,QAAD,CAAX,GAAwB,QAAxB;AACAA,aAAW,CAAC,SAAD,CAAX,GAAyB,SAAzB;AACAA,aAAW,CAAC,QAAD,CAAX,GAAwB,QAAxB;AACH,CALD,EAKGA,WAAW,KAAKA,WAAW,GAAG,EAAnB,CALd;;AAMA,MAAaC,IAAI,GAAG;AAAA,MAAC;AAAEnF,gBAAF;AAAgBsB,WAAhB;AAAyBS;AAAzB,GAAD;AAAA,SAA4C;AAC5D/B,gBAD4D;AAE5DE,QAAI,EAAEF,YAAY,YAAYK,KAAxB,GAAgC6D,SAAhC,GAA4ClE,YAFU;AAG5DG,SAAK,EAAEH,YAAY,YAAYK,KAAxB,GAAgCL,YAAhC,GAA+CkE,SAHM;AAI5D5D,SAAK,EAAEN,YAJqD;AAK5DO,aAAS,EAAEe,OAAO,IAAIS,SAAX,GAAuB,IAAIvB,IAAJ,EAAvB,GAAoC0D,SALa;AAM5DzD,cAAU,EAAET,YAAY,GAAG,IAAIQ,IAAJ,EAAH,GAAgB0D,SANoB;AAO5D,OAAGI,cAAc,CAACN,gBAAgB,CAAChE,YAAD,EAAesB,OAAO,IAAIS,SAA1B,CAAjB,CAP2C;AAQ5DX,WAAO,EAAE,CARmD;AAS5DE,WAAO,EAAE2D;AATmD,GAA5C;AAAA,CAApB;;AAWY,MAAC5C,OAAO,GAAG,CAACM,KAAD,EAAQyC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKH,WAAW,CAACI,KAAjB;AACI,aAAO,EACH,GAAG3C,KADA;AAEHpC,iBAAS,EAAE,IAAIC,IAAJ,EAFR;AAGHC,kBAAU,EAAEyD,SAHT;AAIH,WAAGI,cAAc,CAACP,WAAW,CAACK,OAAb,CAJd;AAKHhD,eAAO,EAAEgE,MAAM,CAACG,IAAP,CAAYnE,OALlB;AAMHE,eAAO,EAAE8D,MAAM,CAACG,IAAP,CAAYjE;AANlB,OAAP;;AAQJ,SAAK4D,WAAW,CAACxD,MAAjB;AACI,aAAO,EACH,GAAGiB,KADA;AAEHpC,iBAAS,EAAE2D,SAFR;AAGHzD,kBAAU,EAAEyD,SAHT;AAIH,WAAGI,cAAc,CAACD,aAAa,CAAC1B,KAAK,CAACxC,KAAN,IAAewC,KAAK,CAACzC,IAAtB,CAAd,CAJd;AAKHkB,eAAO,EAAEgE,MAAM,CAACG,IAAP,CAAYnE,OALlB;AAMHE,eAAO,EAAE8D,MAAM,CAACG,IAAP,CAAYjE;AANlB,OAAP;;AAQJ,SAAK4D,WAAW,CAACM,OAAjB;AACI,aAAO,EACH,GAAG7C,KADA;AAEHzC,YAAI,EAAEkF,MAAM,CAACK,OAFV;AAGHnF,aAAK,EAAE8E,MAAM,CAACK,OAHX;AAIHtF,aAAK,EAAE+D,SAJJ;AAKHzD,kBAAU,EAAE,IAAID,IAAJ,EALT;AAMH,WAAG8D,cAAc,CAACP,WAAW,CAACI,SAAb,CANd;AAOH7C,eAAO,EAAE8D,MAAM,CAACG,IAAP,CAAYjE;AAPlB,OAAP;;AASJ,SAAK4D,WAAW,CAACQ,MAAjB;AACI,aAAO,EACH,GAAG/C,KADA;AAEHxC,aAAK,EAAEiF,MAAM,CAACK,OAFX;AAGHnF,aAAK,EAAE8E,MAAM,CAACK,OAHX;AAIHhF,kBAAU,EAAE,IAAID,IAAJ,EAJT;AAKH,WAAG8D,cAAc,CAACP,WAAW,CAACE,QAAb,CALd;AAMH3C,eAAO,EAAE8D,MAAM,CAACG,IAAP,CAAYjE;AANlB,OAAP;;AAQJ;AACI,aAAOqB,KAAP;AAvCR;AAyCH,CA1CW;;AA2CZ,MAAagD,kBAAkB,GAAIC,QAAD,IAAc,UAACR,MAAD,EAAqB;AAAA,qCAAT/B,IAAS;AAATA,QAAS;AAAA;;AACjEuC,UAAQ,CAACR,MAAD,EAAS,GAAG/B,IAAZ,CAAR;;AACA,MAAI+B,MAAM,CAACC,IAAP,KAAgBH,WAAW,CAACI,KAA5B,IAAqC,OAAOF,MAAM,CAACK,OAAd,KAA0B,UAAnE,EAA+E;AAC3EL,UAAM,CAACK,OAAP;AACH;AACJ,CALD;;ACjFA,MAAM5D,KAAN,SAAoB0B,KAAK,CAACsC,SAA1B,CAAoC;;;;;;;AAMpC,SAAgBC,cAAT,GAAoE;AAAA,MAA5CC,cAA4C,uEAA3B,EAA2B;AAAA,MAAvBC,WAAuB,uEAAT,OAAS;AACvE,QAAM;AAAEC,YAAQ,EAAEC,iBAAZ;AAA+BC;AAA/B,MAA4C5C,KAAK,CAAC6C,aAAN,CAAoBlC,SAApB,CAAlD;;AACA,WAAS+B,QAAT,QAAgC;AAAA,QAAd;AAAEnE;AAAF,KAAc;AAC5B,WAAQyB,KAAK,CAACC,aAAN,CAAoB0C,iBAApB,EAAuC,IAAvC,EAA6C5F,KAAK,IAAI;AAC1D,UAAI,CAACA,KAAL,EAAY;AACR,cAAM,IAAID,KAAJ,CAAU,4EAAV,CAAN;AACH;;AACD,aAAOyB,QAAQ,CAACxB,KAAD,CAAf;AACH,KALO,CAAR;AAMH;;AACD,QAAMuB,KAAN,SAAoB0B,KAAK,CAACsC,SAA1B,CAAoC;AAChCzG,eAAW,CAACiH,KAAD,EAAQ;AACf,YAAMA,KAAN;AACA,WAAKC,OAAL,GAAe,KAAf;AACA,WAAKlF,OAAL,GAAe,CAAf;AACA,WAAKiC,IAAL,GAAY,EAAZ;AACA,WAAK/B,OAAL,GAAe2D,WAAf;AACA,WAAKsB,eAAL,GAAuB,IAAIpH,mBAAJ,EAAvB;AACA,WAAKmG,KAAL,GAAa,KAAKA,KAAL,CAAWkB,IAAX,CAAgB,IAAhB,CAAb;AACA,WAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUD,IAAV,CAAe,IAAf,CAAZ;AACA,WAAKhF,GAAL,GAAW,KAAKA,GAAL,CAASgF,IAAT,CAAc,IAAd,CAAX;AACA,WAAK9E,MAAL,GAAc,KAAKA,MAAL,CAAY8E,IAAZ,CAAiB,IAAjB,CAAd;AACA,WAAKrE,SAAL,GAAiB,KAAKA,SAAL,CAAeqE,IAAf,CAAoB,IAApB,CAAjB;AACA,WAAKpE,QAAL,GAAgB,KAAKA,QAAL,CAAcoE,IAAd,CAAmB,IAAnB,CAAhB;AACA,WAAK7E,OAAL,GAAe,KAAKA,OAAL,CAAa6E,IAAb,CAAkB,IAAlB,CAAf;AACA,WAAK5E,QAAL,GAAgB,KAAKA,QAAL,CAAc4E,IAAd,CAAmB,IAAnB,CAAhB;AACA,YAAMlF,OAAO,GAAG+E,KAAK,CAAC/E,OAAtB;AACA,YAAMS,SAAS,GAAGsE,KAAK,CAACtE,SAAN,IAAmBgE,cAAc,CAAChE,SAApD;AACA,YAAM/B,YAAY,GAAGqG,KAAK,CAACrG,YAAN,IAAsB+F,cAAc,CAAC/F,YAA1D;AACA,WAAK2C,KAAL,GAAa,EACT,GAAGwC,IAAI,CAAC;AAAEnF,sBAAF;AAAgBsB,iBAAhB;AAAyBS;AAAzB,SAAD,CADE;AAETL,cAAM,EAAE,KAAKA,MAFJ;AAGTF,WAAG,EAAE,KAAKA,GAHD;AAITC,cAAM,EAAE,MAAM;AACV,eAAKgF,IAAL;AACA,eAAKjF,GAAL,CAAS,GAAG,KAAK6B,IAAjB;AACH,SAPQ;AAQT1B,eAAO,EAAE,KAAKA,OARL;AASTC,gBAAQ,EAAE,KAAKA;AATN,OAAb;AAWA,WAAKW,UAAL,GAAkB8D,KAAK,CAAC9D,UAAN,IAAoBwD,cAAc,CAACxD,UAArD;AACA,YAAM;AAAEmE;AAAF,UAAyB7H,WAAW,CAACI,eAA3C;;AACA,YAAM0H,QAAQ,GAAGN,KAAK,CAAChE,OAAN,IAAiB0D,cAAc,CAAC1D,OAAjD;;AACA,YAAMuE,WAAW,GAAGP,KAAK,CAAC/D,UAAN,IAAoByD,cAAc,CAACzD,UAAnC,IAAiDoE,kBAArE;;AACA,YAAMrE,SAAO,GAAGsE,QAAQ,GAClB,CAAChE,KAAD,EAAQyC,MAAR,KAAmBuB,QAAQ,CAAChE,KAAD,EAAQyC,MAAR,EAAgByB,OAAhB,CADT,GAElBA,OAFN;AAGA,YAAMjB,QAAQ,GAAGD,kBAAkB,CAAC,CAACP,MAAD,EAAS0B,QAAT,KAAsB;AACtD,aAAKC,QAAL,CAAcpE,KAAK,IAAIN,SAAO,CAACM,KAAD,EAAQyC,MAAR,CAA9B,EAA+C0B,QAA/C;AACH,OAFkC,CAAnC;AAGA,WAAKlB,QAAL,GAAgBgB,WAAW,GAAGxB,MAAM,IAAIwB,WAAW,CAACxB,MAAD,EAASQ,QAAT,EAAmBS,KAAnB,CAAxB,GAAoDT,QAA/E;AACH;;AACDoB,qBAAiB,GAAG;AAChB,WAAKV,OAAL,GAAe,IAAf;;AACA,UAAI,KAAKD,KAAL,CAAW/E,OAAX,IAAsB,CAAC,KAAKqB,KAAL,CAAW3C,YAAtC,EAAoD;AAChD,aAAKyG,IAAL;AACH;AACJ;;AACDQ,sBAAkB,CAACC,SAAD,EAAY;AAC1B,YAAM;AAAEjF,aAAF;AAASC,eAAO,GAAG6D,cAAc,CAAC7D,OAAlC;AAA2CZ,eAA3C;AAAoDS;AAApD,UAAkE,KAAKsE,KAA7E;;AACA,UAAIpE,KAAK,KAAKiF,SAAS,CAACjF,KAAxB,EAA+B;AAC3B,YAAI,KAAKb,OAAT,EACI,KAAKM,MAAL;AACJ,eAAO,KAAK+E,IAAL,EAAP;AACH;;AACD,UAAIvE,OAAO,IACPA,OAAO,CAAC,EAAE,GAAG6D,cAAL;AAAqB,WAAG,KAAKM;AAA7B,OAAD,EAAuC,EAAE,GAAGN,cAAL;AAAqB,WAAGmB;AAAxB,OAAvC,CADX,EACwF;AACpF,YAAI,KAAK9F,OAAT,EACI,KAAKM,MAAL;AACJ,eAAO,KAAK+E,IAAL,EAAP;AACH;;AACD,UAAInF,OAAO,KAAK4F,SAAS,CAAC5F,OAA1B,EAAmC;AAC/B,YAAI,KAAKF,OAAT,EACI,KAAKM,MAAL;AACJ,YAAIJ,OAAJ,EACI,OAAO,KAAKmF,IAAL,EAAP;AACP;;AACD,UAAI1E,SAAS,KAAKmF,SAAS,CAACnF,SAA5B,EAAuC;AACnC,YAAI,KAAKX,OAAT,EACI,KAAKM,MAAL;AACJ,YAAIK,SAAJ,EACI,OAAO,KAAK0E,IAAL,EAAP;AACP;AACJ;;AACDU,wBAAoB,GAAG;AACnB,WAAKzF,MAAL;AACA,WAAK4E,OAAL,GAAe,KAAf;AACH;;AACDc,WAAO,CAAC7B,IAAD,EAAO;AACV,aAAO;AACHnE,eAAO,EAAE,KAAKA,OADX;AAEHE,eAAO,EAAE,KAAKA,OAFX;AAGHiB,kBAAU,EAAE,KAAKA,UAHd;AAIH,WAAGgD;AAJA,OAAP;AAMH;;AACDD,SAAK,CAACvD,SAAD,EAAY;AACb,UAAI,qBAAqBlD,WAAzB,EAAsC;AAClC,aAAK0H,eAAL,CAAqBlH,KAArB;AACA,aAAKkH,eAAL,GAAuB,IAAI1H,WAAW,CAACwI,eAAhB,EAAvB;AACH;;AACD,WAAKjG,OAAL;AACA,aAAQ,KAAKE,OAAL,GAAe,IAAIC,OAAJ,CAAY,CAAC+F,OAAD,EAAU5B,MAAV,KAAqB;AACpD,YAAI,CAAC,KAAKY,OAAV,EACI;;AACJ,cAAMiB,QAAQ,GAAG,MAAMxF,SAAS,GAAGiD,IAAZ,CAAiBsC,OAAjB,EAA0B5B,MAA1B,CAAvB;;AACA,aAAKE,QAAL,CAAc;AAAEP,cAAI,EAAEH,WAAW,CAACI,KAApB;AAA2BG,iBAAO,EAAE8B,QAApC;AAA8ChC,cAAI,EAAE,KAAK6B,OAAL;AAApD,SAAd;AACH,OALsB,CAAvB;AAMH;;AACDX,QAAI,GAAG;AACH,YAAMnF,OAAO,GAAG,KAAK+E,KAAL,CAAW/E,OAA3B;AACA,YAAMS,SAAS,GAAG,KAAKsE,KAAL,CAAWtE,SAAX,IAAwBgE,cAAc,CAAChE,SAAzD;;AACA,UAAIT,OAAJ,EAAa;AACT,aAAKgE,KAAL,CAAW,MAAMhE,OAAjB,EACK0D,IADL,CACU,KAAK7C,SAAL,CAAe,KAAKf,OAApB,CADV,EAEK2D,KAFL,CAEW,KAAK3C,QAAL,CAAc,KAAKhB,OAAnB,CAFX;AAGH,OAJD,MAKK,IAAIW,SAAJ,EAAe;AAChB,cAAMsE,KAAK,GAAG,EAAE,GAAGN,cAAL;AAAqB,aAAG,KAAKM;AAA7B,SAAd;AACA,aAAKf,KAAL,CAAW,MAAMvD,SAAS,CAACsE,KAAD,EAAQ,KAAKE,eAAb,CAA1B,EACKvB,IADL,CACU,KAAK7C,SAAL,CAAe,KAAKf,OAApB,CADV,EAEK2D,KAFL,CAEW,KAAK3C,QAAL,CAAc,KAAKhB,OAAnB,CAFX;AAGH;AACJ;;AACDI,OAAG,GAAU;AAAA,yCAAN6B,IAAM;AAANA,YAAM;AAAA;;AACT,YAAMrB,OAAO,GAAG,KAAKqE,KAAL,CAAWrE,OAAX,IAAsB+D,cAAc,CAAC/D,OAArD;;AACA,UAAIA,OAAJ,EAAa;AACT,aAAKqB,IAAL,GAAYA,IAAZ;AACA,cAAMgD,KAAK,GAAG,EAAE,GAAGN,cAAL;AAAqB,aAAG,KAAKM;AAA7B,SAAd;AACA,eAAO,KAAKf,KAAL,CAAW,MAAMtD,OAAO,CAACqB,IAAD,EAAOgD,KAAP,EAAc,KAAKE,eAAnB,CAAxB,EAA6DvB,IAA7D,CAAkE,KAAK7C,SAAL,CAAe,KAAKf,OAApB,CAAlE,EAAgG,KAAKgB,QAAL,CAAc,KAAKhB,OAAnB,CAAhG,CAAP;AACH;AACJ;;AACDM,UAAM,GAAG;AACL,YAAM8F,QAAQ,GAAG,KAAKnB,KAAL,CAAWmB,QAAX,IAAuBzB,cAAc,CAACyB,QAAvD;AACAA,cAAQ,IAAIA,QAAQ,EAApB;AACA,WAAKpG,OAAL;AACA,WAAKmF,eAAL,CAAqBlH,KAArB;AACA,WAAKiH,OAAL,IAAgB,KAAKV,QAAL,CAAc;AAAEP,YAAI,EAAEH,WAAW,CAACxD,MAApB;AAA4B6D,YAAI,EAAE,KAAK6B,OAAL;AAAlC,OAAd,CAAhB;AACH;;AACDjF,aAAS,CAACf,OAAD,EAAU;AACf,aAAQlB,IAAD,IAAU;AACb,YAAI,KAAKkB,OAAL,KAAiBA,OAArB,EAA8B;AAC1B,gBAAMe,SAAS,GAAG,KAAKkE,KAAL,CAAWlE,SAAX,IAAwB4D,cAAc,CAAC5D,SAAzD;AACA,eAAKR,OAAL,CAAazB,IAAb,EAAmB,MAAMiC,SAAS,IAAIA,SAAS,CAACjC,IAAD,CAA/C;AACH;;AACD,eAAOA,IAAP;AACH,OAND;AAOH;;AACDkC,YAAQ,CAAChB,OAAD,EAAU;AACd,aAAQjB,KAAD,IAAW;AACd,YAAI,KAAKiB,OAAL,KAAiBA,OAArB,EAA8B;AAC1B,gBAAMgB,QAAQ,GAAG,KAAKiE,KAAL,CAAWjE,QAAX,IAAuB2D,cAAc,CAAC3D,QAAvD;AACA,eAAKR,QAAL,CAAczB,KAAd,EAAqB,MAAMiC,QAAQ,IAAIA,QAAQ,CAACjC,KAAD,CAA/C;AACH;;AACD,eAAOA,KAAP;AACH,OAND;AAOH;;AACDwB,WAAO,CAACzB,IAAD,EAAO4G,QAAP,EAAiB;AACpB,WAAKR,OAAL,IACI,KAAKV,QAAL,CAAc;AAAEP,YAAI,EAAEH,WAAW,CAACM,OAApB;AAA6BC,eAAO,EAAEvF,IAAtC;AAA4CqF,YAAI,EAAE,KAAK6B,OAAL;AAAlD,OAAd,EAAkFN,QAAlF,CADJ;AAEA,aAAO5G,IAAP;AACH;;AACD0B,YAAQ,CAACzB,KAAD,EAAQ2G,QAAR,EAAkB;AACtB,WAAKR,OAAL,IACI,KAAKV,QAAL,CAAc;AAAEP,YAAI,EAAEH,WAAW,CAACQ,MAApB;AAA4BD,eAAO,EAAEtF,KAArC;AAA4CA,aAAK,EAAE,IAAnD;AAAyDoF,YAAI,EAAE,KAAK6B,OAAL;AAA/D,OAAd,EAA+FN,QAA/F,CADJ;AAEA,aAAO3G,KAAP;AACH;;AACDiD,UAAM,GAAG;AACL,YAAM;AAAEtB,gBAAF;AAAYW;AAAZ,UAAyB,KAAK4D,KAApC;;AACA,UAAI5D,QAAQ,IAAI,KAAKE,KAAL,CAAW7B,SAAvB,IAAoC,KAAKQ,OAAL,KAAiB2D,WAAzD,EAAsE;;AAElE,cAAM,KAAK3D,OAAX;AACH;;AACD,UAAI,OAAOQ,QAAP,KAAoB,UAAxB,EAAoC;AAChC,cAAMsB,MAAM,GAAGtB,QAAf;AACA,eAAOyB,KAAK,CAACC,aAAN,CAAoB2C,QAApB,EAA8B;AAAE7F,eAAK,EAAE,KAAKqC;AAAd,SAA9B,EAAqDS,MAAM,CAAC,KAAKT,KAAN,CAA3D,CAAP;AACH;;AACD,UAAIb,QAAQ,KAAKoC,SAAb,IAA0BpC,QAAQ,KAAK,IAA3C,EAAiD;AAC7C,eAAOyB,KAAK,CAACC,aAAN,CAAoB2C,QAApB,EAA8B;AAAE7F,eAAK,EAAE,KAAKqC;AAAd,SAA9B,EAAqDb,QAArD,CAAP;AACH;;AACD,aAAO,IAAP;AACH;;AA3K+B;;AA6KpC,MAAIgC,SAAJ,EACIjC,KAAK,CAACiC,SAAN,GAAkBA,SAAS,CAACjC,KAA5B;;AACJ,QAAM4F,YAAY,GAAGpB,KAAK,IAAK9C,KAAK,CAACC,aAAN,CAAoByC,QAApB,EAA8B,IAA9B,EAAoCyB,EAAE,IAAInE,KAAK,CAACC,aAAN,CAAoBF,SAApB,EAA+BkB,MAAM,CAACI,MAAP,CAAc,EAAd,EAAkByB,KAAlB,EAAyB;AAAE1D,SAAK,EAAE+E;AAAT,GAAzB,CAA/B,CAA1C,CAA/B;;AACA,QAAMC,YAAY,GAAGtB,KAAK,IAAK9C,KAAK,CAACC,aAAN,CAAoByC,QAApB,EAA8B,IAA9B,EAAoCyB,EAAE,IAAInE,KAAK,CAACC,aAAN,CAAoBE,SAApB,EAA+Bc,MAAM,CAACI,MAAP,CAAc,EAAd,EAAkByB,KAAlB,EAAyB;AAAE1D,SAAK,EAAE+E;AAAT,GAAzB,CAA/B,CAA1C,CAA/B;;AACA,QAAME,cAAc,GAAGvB,KAAK,IAAK9C,KAAK,CAACC,aAAN,CAAoByC,QAApB,EAA8B,IAA9B,EAAoCyB,EAAE,IAAInE,KAAK,CAACC,aAAN,CAAoBG,WAApB,EAAiCa,MAAM,CAACI,MAAP,CAAc,EAAd,EAAkByB,KAAlB,EAAyB;AAAE1D,SAAK,EAAE+E;AAAT,GAAzB,CAAjC,CAA1C,CAAjC;;AACA,QAAMG,aAAa,GAAGxB,KAAK,IAAK9C,KAAK,CAACC,aAAN,CAAoByC,QAApB,EAA8B,IAA9B,EAAoCyB,EAAE,IAAInE,KAAK,CAACC,aAAN,CAAoBI,UAApB,EAAgCY,MAAM,CAACI,MAAP,CAAc,EAAd,EAAkByB,KAAlB,EAAyB;AAAE1D,SAAK,EAAE+E;AAAT,GAAzB,CAAhC,CAA1C,CAAhC;;AACA,QAAMI,YAAY,GAAGzB,KAAK,IAAK9C,KAAK,CAACC,aAAN,CAAoByC,QAApB,EAA8B,IAA9B,EAAoCyB,EAAE,IAAInE,KAAK,CAACC,aAAN,CAAoBK,SAApB,EAA+BW,MAAM,CAACI,MAAP,CAAc,EAAd,EAAkByB,KAAlB,EAAyB;AAAE1D,SAAK,EAAE+E;AAAT,GAAzB,CAA/B,CAA1C,CAA/B;;AACAD,cAAY,CAACzB,WAAb,GAA4B,GAAEA,WAAY,UAA1C;AACA2B,cAAY,CAAC3B,WAAb,GAA4B,GAAEA,WAAY,UAA1C;AACA4B,gBAAc,CAAC5B,WAAf,GAA8B,GAAEA,WAAY,YAA5C;AACA6B,eAAa,CAAC7B,WAAd,GAA6B,GAAEA,WAAY,WAA3C;AACA8B,cAAY,CAAC9B,WAAb,GAA4B,GAAEA,WAAY,UAA1C;AACA,SAAOxB,MAAM,CAACI,MAAP,CAAc/C,KAAd,EAAqB;AACxBmE,eAAW,EAAEA,WADW;AAExBtD,WAAO,EAAE+E,YAFe;AAGxB3E,WAAO,EAAE6E,YAHe;AAIxBI,WAAO,EAAEJ,YAJe;AAKxB3E,aAAS,EAAE4E,cALa;AAMxBI,YAAQ,EAAEJ,cANc;AAOxB3E,YAAQ,EAAE4E,aAPc;AAQxB3E,WAAO,EAAE4E;AARe,GAArB,CAAP;AAUH;;AACD,cAAehC,cAAc,EAA7B;;ACtNA,SAASmC,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8B;AAC1B,QAAMC,OAAO,GAAG,OAAOF,IAAP,KAAgB,UAAhB,GACV,EACE,GAAGC,IADL;AAEEpG,aAAS,EAAEmG;AAFb,GADU,GAKVA,IALN;AAMA,QAAM9G,OAAO,GAAGiH,MAAM,CAAC,CAAD,CAAtB;AACA,QAAMC,SAAS,GAAGD,MAAM,CAAC,IAAD,CAAxB;AACA,QAAME,QAAQ,GAAGF,MAAM,CAACnE,SAAD,CAAvB;AACA,QAAMsE,WAAW,GAAGH,MAAM,CAACD,OAAD,CAA1B;AACA,QAAMK,WAAW,GAAGJ,MAAM,CAACpD,WAAD,CAA1B;AACA,QAAMsB,eAAe,GAAG8B,MAAM,CAAC,IAAIlJ,mBAAJ,EAAD,CAA9B;AACA,QAAM;AAAEuH;AAAF,MAAyB7H,WAAW,CAACI,eAA3C;AACA,QAAM;AAAAoD,aAAEA,SAAF;AAAWC,cAAU,GAAGoE;AAAxB,MAA+C0B,OAArD;AACA,QAAM,CAACzF,KAAD,EAAQ+F,SAAR,IAAqBC,UAAU,CAACtG,SAAO,GAAG,CAACM,KAAD,EAAQyC,MAAR,KAAmB/C,SAAO,CAACM,KAAD,EAAQyC,MAAR,EAAgByB,OAAhB,CAA7B,GAA6DA,OAArE,EAAmFuB,OAAnF,EAA4FjD,IAA5F,CAArC;AACA,QAAMS,QAAQ,GAAGgD,WAAW,CAACtG,UAAU,GACjC8C,MAAM,IAAI9C,UAAU,CAAC8C,MAAD,EAASO,kBAAkB,CAAC+C,SAAD,CAA3B,EAAwCF,WAAW,CAACK,OAApD,CADa,GAEjClD,kBAAkB,CAAC+C,SAAD,CAFI,EAES,CAACpG,UAAD,CAFT,CAA5B;AAGA,QAAM;AAAEC;AAAF,MAAiB6F,OAAvB;AACA,QAAMhB,OAAO,GAAGwB,WAAW,CAAErD,IAAD,KAAW;AACnCnE,WAAO,EAAEA,OAAO,CAACyH,OADkB;AAEnCvH,WAAO,EAAEmH,WAAW,CAACI,OAFc;AAGnCtG,cAHmC;AAInC,OAAGgD;AAJgC,GAAX,CAAD,EAKvB,CAAChD,UAAD,CALuB,CAA3B;AAMA,QAAMZ,OAAO,GAAGiH,WAAW,CAAC,UAAC1I,IAAD,EAA2B;AAAA,QAApB4G,QAAoB,uEAAT5H,IAAS;;AACnD,QAAIoJ,SAAS,CAACO,OAAd,EAAuB;AACnBjD,cAAQ,CAAC;AACLP,YAAI,EAAEH,WAAW,CAACM,OADb;AAELC,eAAO,EAAEvF,IAFJ;AAGLqF,YAAI,EAAE6B,OAAO;AAHR,OAAD,CAAR;AAKAN,cAAQ;AACX;;AACD,WAAO5G,IAAP;AACH,GAV0B,EAUxB,CAAC0F,QAAD,EAAWwB,OAAX,CAVwB,CAA3B;AAWA,QAAMxF,QAAQ,GAAGgH,WAAW,CAAC,UAACzI,KAAD,EAA4B;AAAA,QAApB2G,QAAoB,uEAAT5H,IAAS;;AACrD,QAAIoJ,SAAS,CAACO,OAAd,EAAuB;AACnBjD,cAAQ,CAAC;AACLP,YAAI,EAAEH,WAAW,CAACQ,MADb;AAELD,eAAO,EAAEtF,KAFJ;AAGLA,aAAK,EAAE,IAHF;AAILoF,YAAI,EAAE6B,OAAO;AAJR,OAAD,CAAR;AAMAN,cAAQ;AACX;;AACD,WAAO3G,KAAP;AACH,GAX2B,EAWzB,CAACyF,QAAD,EAAWwB,OAAX,CAXyB,CAA5B;AAYA,QAAM;AAAEjF,aAAF;AAAaC;AAAb,MAA0BgG,OAAhC;AACA,QAAMU,aAAa,GAAGF,WAAW,CAACG,KAAK,IAAK7I,IAAD,IAAU6I,KAAK,KAAK3H,OAAO,CAACyH,OAAlB,IAA6BlH,OAAO,CAACzB,IAAD,EAAO,MAAMiC,SAAS,IAAIA,SAAS,CAACjC,IAAD,CAAnC,CAAxD,EAAoG,CAACyB,OAAD,EAAUQ,SAAV,CAApG,CAAjC;AACA,QAAM6G,YAAY,GAAGJ,WAAW,CAACG,KAAK,IAAKE,GAAD,IAASF,KAAK,KAAK3H,OAAO,CAACyH,OAAlB,IAA6BjH,QAAQ,CAACqH,GAAD,EAAM,MAAM7G,QAAQ,IAAIA,QAAQ,CAAC6G,GAAD,CAAhC,CAAxD,EAAgG,CAACrH,QAAD,EAAWQ,QAAX,CAAhG,CAAhC;AACA,QAAMkD,KAAK,GAAGsD,WAAW,CAAC7G,SAAS,IAAI;AACnC,QAAI,qBAAqBlD,WAAzB,EAAsC;AAClC0H,qBAAe,CAACsC,OAAhB,CAAwBxJ,KAAxB;AACAkH,qBAAe,CAACsC,OAAhB,GAA0B,IAAIhK,WAAW,CAACwI,eAAhB,EAA1B;AACH;;AACDjG,WAAO,CAACyH,OAAR;AACA,WAAQJ,WAAW,CAACI,OAAZ,GAAsB,IAAItH,OAAJ,CAAY,CAAC+F,OAAD,EAAU5B,MAAV,KAAqB;AAC3D,UAAI,CAAC4C,SAAS,CAACO,OAAf,EACI;;AACJ,YAAMtB,QAAQ,GAAG,MAAMxF,SAAS,GAAGiD,IAAZ,CAAiBsC,OAAjB,EAA0B5B,MAA1B,CAAvB;;AACAE,cAAQ,CAAC;AACLP,YAAI,EAAEH,WAAW,CAACI,KADb;AAELG,eAAO,EAAE8B,QAFJ;AAGLhC,YAAI,EAAE6B,OAAO;AAHR,OAAD,CAAR;AAKH,KAT6B,CAA9B;AAUH,GAhBwB,EAgBtB,CAACxB,QAAD,EAAWwB,OAAX,CAhBsB,CAAzB;AAiBA,QAAM;AAAE9F,WAAF;AAAWS,aAAX;AAAsB/B;AAAtB,MAAuCoI,OAA7C;AACA,QAAM3B,IAAI,GAAGmC,WAAW,CAAC,MAAM;AAC3B,UAAMM,gBAAgB,GAAGlJ,YAAY,IAAIoB,OAAO,CAACyH,OAAR,KAAoB,CAA7D;;AACA,QAAIvH,OAAJ,EAAa;AACTgE,WAAK,CAAC,MAAMhE,OAAP,CAAL,CACK0D,IADL,CACU8D,aAAa,CAAC1H,OAAO,CAACyH,OAAT,CADvB,EAEK9D,KAFL,CAEWiE,YAAY,CAAC5H,OAAO,CAACyH,OAAT,CAFvB;AAGH,KAJD,MAKK,IAAI9G,SAAS,IAAI,CAACmH,gBAAlB,EAAoC;AACrC5D,WAAK,CAAC,MAAMvD,SAAS,CAACyG,WAAW,CAACK,OAAb,EAAsBtC,eAAe,CAACsC,OAAtC,CAAhB,CAAL,CACK7D,IADL,CACU8D,aAAa,CAAC1H,OAAO,CAACyH,OAAT,CADvB,EAEK9D,KAFL,CAEWiE,YAAY,CAAC5H,OAAO,CAACyH,OAAT,CAFvB;AAGH;AACJ,GAZuB,EAYrB,CAACvD,KAAD,EAAQhE,OAAR,EAAiBS,SAAjB,EAA4B/B,YAA5B,EAA0C8I,aAA1C,EAAyDE,YAAzD,CAZqB,CAAxB;AAaA,QAAM;AAAEhH;AAAF,MAAcoG,OAApB;AACA,QAAM5G,GAAG,GAAGoH,WAAW,CAAC,YAAa;AAAA,uCAATvF,IAAS;AAATA,UAAS;AAAA;;AACjC,QAAIrB,OAAJ,EAAa;AACTuG,cAAQ,CAACM,OAAT,GAAmBxF,IAAnB;AACAiC,WAAK,CAAC,MAAMtD,OAAO,CAACqB,IAAD,EAAOmF,WAAW,CAACK,OAAnB,EAA4BtC,eAAe,CAACsC,OAA5C,CAAd,CAAL,CACK7D,IADL,CACU8D,aAAa,CAAC1H,OAAO,CAACyH,OAAT,CADvB,EAEK9D,KAFL,CAEWiE,YAAY,CAAC5H,OAAO,CAACyH,OAAT,CAFvB;AAGH;AACJ,GAPsB,EAOpB,CAACvD,KAAD,EAAQtD,OAAR,EAAiB8G,aAAjB,EAAgCE,YAAhC,CAPoB,CAAvB;AAQA,QAAMvH,MAAM,GAAGmH,WAAW,CAAC,MAAM;AAC7BL,YAAQ,CAACM,OAAT,GAAmBrH,GAAG,CAAC,GAAG+G,QAAQ,CAACM,OAAb,CAAtB,GAA8CpC,IAAI,EAAlD;AACH,GAFyB,EAEvB,CAACjF,GAAD,EAAMiF,IAAN,CAFuB,CAA1B;AAGA,QAAM;AAAEe;AAAF,MAAeY,OAArB;AACA,QAAM1G,MAAM,GAAGkH,WAAW,CAAC,MAAM;AAC7BpB,YAAQ,IAAIA,QAAQ,EAApB;AACApG,WAAO,CAACyH,OAAR;AACAtC,mBAAe,CAACsC,OAAhB,CAAwBxJ,KAAxB;AACAiJ,aAAS,CAACO,OAAV,IACIjD,QAAQ,CAAC;AACLP,UAAI,EAAEH,WAAW,CAACxD,MADb;AAEL6D,UAAI,EAAE6B,OAAO;AAFR,KAAD,CADZ;AAKH,GATyB,EASvB,CAACI,QAAD,EAAW5B,QAAX,EAAqBwB,OAArB,CATuB,CAA1B;;;;;AAYA,QAAM;AAAEnF,SAAF;AAASC;AAAT,MAAqBkG,OAA3B;AACAe,WAAS,CAAC,MAAM;AACZ,QAAIjH,OAAO,IAAIsG,WAAW,CAACK,OAAvB,IAAkC3G,OAAO,CAACkG,OAAD,EAAUI,WAAW,CAACK,OAAtB,CAA7C,EAA6E;AACzEL,iBAAW,CAACK,OAAZ,GAAsBT,OAAtB;AACA3B,UAAI;AACP;AACJ,GALQ,CAAT;AAMA0C,WAAS,CAAC,MAAM;AACZX,eAAW,CAACK,OAAZ,GAAsBT,OAAtB;AACH,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAGAe,WAAS,CAAC,MAAM;AACZ,QAAI/H,OAAO,CAACyH,OAAZ,EACInH,MAAM;AACV,QAAIJ,OAAO,IAAIS,SAAf,EACI0E,IAAI;AACX,GALQ,EAKN,CAACnF,OAAD,EAAUS,SAAV,EAAqBE,KAArB,CALM,CAAT;AAMAkH,WAAS,CAAC,MAAM,MAAM;AAClBb,aAAS,CAACO,OAAV,GAAoB,KAApB;AACH,GAFQ,EAEN,EAFM,CAAT;AAGAM,WAAS,CAAC,MAAM,MAAMzH,MAAM,EAAnB,EAAuB,EAAvB,CAAT;;;AAEA0H,eAAa,CAACzG,KAAD,EAAQ;AAAA,QAAC;AAAEjC;AAAF,KAAD;AAAA,WAAiB,IAAGU,OAAO,CAACyH,OAAQ,KAAInI,MAAO,EAA/C;AAAA,GAAR,CAAb;;AACA,MAAI0H,OAAO,CAAC3F,QAAR,IAAoBE,KAAK,CAAC7B,SAA1B,IAAuC2H,WAAW,CAACI,OAAZ,KAAwB5D,WAAnE,EAAgF;;AAE5E,UAAMwD,WAAW,CAACI,OAAlB;AACH;;AACD,SAAOQ,OAAO,CAAC,OAAO,EAClB,GAAG1G,KADe;AAElBnB,OAFkB;AAGlBC,UAHkB;AAIlBC,UAJkB;AAKlBC,WALkB;AAMlBC;AANkB,GAAP,CAAD,EAOV,CAACe,KAAD,EAAQnB,GAAR,EAAaC,MAAb,EAAqBC,MAArB,EAA6BC,OAA7B,EAAsCC,QAAtC,CAPU,CAAd;AAQH;;AACM,MAAM0H,UAAN,SAAyBjJ,KAAhC,CAAsC;AAClCjB,aAAW,CAACmK,QAAD,EAAW;AAClB,UAAO,GAAEA,QAAQ,CAAC7I,MAAO,IAAG6I,QAAQ,CAACC,UAAW,EAAhD;AACA,SAAKD,QAAL,GAAgBA,QAAhB;;;AAEA,QAAI/E,MAAM,CAACC,cAAX,EAA2B;;AAEvBD,YAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B6E,UAAU,CAAC3E,SAAvC;AACH;AACJ;;AATiC;;AAWtC,MAAM8E,aAAa,GAAG,CAACC,MAAD,EAASC,IAAT,KAAmBC,GAAD,IAAS;AAC7C,MAAI,CAACA,GAAG,CAACC,EAAT,EACI,OAAOtI,OAAO,CAACmE,MAAR,CAAe,IAAI4D,UAAJ,CAAeM,GAAf,CAAf,CAAP;AACJ,MAAI,OAAOD,IAAP,KAAgB,SAApB,EACI,OAAOA,IAAI,GAAGC,GAAG,CAACD,IAAJ,EAAH,GAAgBC,GAA3B;AACJ,SAAOF,MAAM,KAAK,kBAAX,GAAgCE,GAAG,CAACD,IAAJ,EAAhC,GAA6CC,GAApD;AACH,CAND;;AAOA,SAASE,OAAT,CAAiBrK,CAAjB,EAAoB;AAChB,SAAO,OAAOA,CAAP,KAAa,QAAb,IAAyB,oBAAoBA,CAApD;AACH;;;;;;;;;;AAQD,SAASsK,aAAT,CAAuBC,QAAvB,EAAiC7E,IAAjC,EAAyE;AAAA,MAAlC;AAAE8E,SAAF;AAASN,QAAT;AAAe,OAAGvB;AAAlB,GAAkC,uEAAJ,EAAI;AACrE,QAAM8B,MAAM,GAAGF,QAAQ,CAACE,MAAT,IAAoB/E,IAAI,IAAIA,IAAI,CAAC+E,MAAhD;AACA,QAAMC,OAAO,GAAGH,QAAQ,CAACG,OAAT,IAAqBhF,IAAI,IAAIA,IAAI,CAACgF,OAAlC,IAA8C,EAA9D;AACA,QAAMT,MAAM,GAAGS,OAAO,CAAC,QAAD,CAAP,IAAqBA,OAAO,CAAC,QAAD,CAA5B,IAA2CA,OAAO,CAACC,GAAR,IAAeD,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAzE;;AACA,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQnF,IAAR,KAAiBtG,WAAW,CAAC0L,KAAZ,CAAkBD,KAAlB,EAAyBnF,IAAzB,EAA+BH,IAA/B,CAAoCyE,aAAa,CAACC,MAAD,EAASC,IAAT,CAAjD,CAAjC;;AACA,QAAMa,OAAO,GAAG,OAAOP,KAAP,KAAiB,SAAjB,GAA6BA,KAA7B,GAAqC,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,QAAzB,EAAmCQ,OAAnC,CAA2CP,MAA3C,MAAuD,CAAC,CAA7G;AACA,QAAMQ,EAAE,GAAGF,OAAO,GAAG,SAAH,GAAe,WAAjC;AACA,QAAMG,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC5Bb,YAD4B;AAE5B7E,QAF4B;AAG5BqF;AAH4B,GAAf,CAAjB;AAKA,QAAMzI,SAAS,GAAG6G,WAAW,CAAC,CAACkC,CAAD,YAAmB;AAAA,QAAf;AAAExL;AAAF,KAAe;AAC7C,WAAO+K,OAAO,CAACL,QAAD,EAAW;AAAE1K,YAAF;AAAU,SAAG6F;AAAb,KAAX,CAAd;AACH,GAF4B,EAE1B,CAACwF,QAAD,CAF0B,CAEhB;AAFgB,GAA7B;AAIA,QAAM3I,OAAO,GAAG4G,WAAW,CAAC,kBAAsBkC,CAAtB,UAAqC;AAAA,QAA3B,CAACC,QAAD,CAA2B;AAAA,QAAZ;AAAEzL;AAAF,KAAY;;AAC7D,QAAI,CAACyL,QAAD,IAAajB,OAAO,CAACiB,QAAD,CAAxB,EAAoC;AAChC,aAAOV,OAAO,CAACL,QAAD,EAAW;AAAE1K,cAAF;AAAU,WAAG6F;AAAb,OAAX,CAAd;AACH;;AACD,QAAI,OAAO4F,QAAP,KAAoB,UAAxB,EAAoC;AAChC,YAAM;AAAEf,gBAAQ,EAAEgB,WAAZ;AAAyB,WAAGC;AAA5B,UAAwCF,QAAQ,CAAC;AAAEf,gBAAF;AAAY1K,cAAZ;AAAoB,WAAG6F;AAAvB,OAAD,CAAtD;AACA,aAAOkF,OAAO,CAACW,WAAW,IAAIhB,QAAhB,EAA0B;AAAE1K,cAAF;AAAU,WAAG2L;AAAb,OAA1B,CAAd;AACH;;AACD,UAAM;AAAEjB,cAAQ,EAAEgB,WAAZ;AAAyB,SAAGC;AAA5B,QAAwCF,QAA9C;AACA,WAAOV,OAAO,CAACW,WAAW,IAAIhB,QAAhB,EAA0B;AAAE1K,YAAF;AAAU,SAAG6F,IAAb;AAAmB,SAAG8F;AAAtB,KAA1B,CAAd;AACH,GAV0B,EAUxB,CAACN,QAAD,CAVwB,CAUd;AAVc,GAA3B;AAYA,QAAMhI,KAAK,GAAGsF,QAAQ,CAAC,EACnB,GAAGG,OADgB;AAEnB,KAACsC,EAAD,GAAMF,OAAO,GAAGxI,OAAH,GAAaD;AAFP,GAAD,CAAtB;AAIAqH,eAAa,CAACzG,KAAD,EAAQ;AAAA,QAAC;AAAEvB,aAAF;AAAWV;AAAX,KAAD;AAAA,WAA0B,IAAGU,OAAQ,KAAIV,MAAO,EAAhD;AAAA,GAAR,CAAb;AACA,SAAOiC,KAAP;AACH;;AACD,MAAMuI,WAAW,GAAG,MAAM;AACtB,QAAM,IAAI7K,KAAJ,CAAU,uGAAV,CAAN;AACH,CAFD;;AAGA,iBAAe8I,SAAS,GAAGlB,QAAH,GAAciD,WAAtC;AACY,MAACC,QAAQ,GAAGhC,SAAS,GAAGY,aAAH,GAAmBmB,WAAxC","names":["globalScope","self","global","GLOBAL","__REACT_ASYNC__","noop","MockAbortController","constructor","abort","signal","PropTypes","require","e","childrenFn","oneOfType","node","func","stateObject","shape","initialValue","any","data","error","instanceOf","Error","value","startedAt","Date","finishedAt","status","oneOf","isInitial","bool","isPending","isLoading","isFulfilled","isResolved","isRejected","isSettled","counter","number","promise","Promise","run","reload","cancel","setData","setError","Async","children","promiseFn","deferFn","watch","watchFn","onResolve","onReject","reducer","dispatcher","debugLabel","string","suspense","Initial","state","isRequired","persist","Pending","initial","Fulfilled","Rejected","Settled","renderFn","render","args","IfInitial","React","createElement","Fragment","IfPending","IfFulfilled","IfRejected","IfSettled","propTypes","StatusTypes","getInitialStatus","rejected","undefined","fulfilled","pending","getIdleStatus","getStatusProps","NeverSettle","Object","setPrototypeOf","__proto__","prototype","assign","create","finally","catch","then","neverSettle","ActionTypes","init","action","type","start","meta","fulfill","payload","reject","dispatchMiddleware","dispatch","Component","createInstance","defaultOptions","displayName","Consumer","UnguardedConsumer","Provider","createContext","props","mounted","abortController","bind","load","devToolsDispatcher","_reducer","_dispatcher","asyncReducer","callback","setState","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","getMeta","AbortController","resolve","executor","onCancel","AsyncInitial","st","AsyncPending","AsyncFulfilled","AsyncRejected","AsyncSettled","Loading","Resolved","useAsync","arg1","arg2","options","useRef","isMounted","lastArgs","lastOptions","lastPromise","_dispatch","useReducer","useCallback","current","handleResolve","count","handleReject","err","isPreInitialized","useEffect","useDebugValue","useMemo","FetchError","response","statusText","parseResponse","accept","json","res","ok","isEvent","useAsyncFetch","resource","defer","method","headers","get","doFetch","input","fetch","isDefer","indexOf","fn","identity","JSON","stringify","_","override","runResource","runInit","unsupported","useFetch"],"sources":["F:\\asd\\leandro\\node_modules\\react-async\\dist-src\\globalScope.js","F:\\asd\\leandro\\node_modules\\react-async\\dist-src\\propTypes.js","F:\\asd\\leandro\\node_modules\\react-async\\dist-src\\helpers.js","F:\\asd\\leandro\\node_modules\\react-async\\dist-src\\status.js","F:\\asd\\leandro\\node_modules\\react-async\\dist-src\\reducer.js","F:\\asd\\leandro\\node_modules\\react-async\\dist-src\\Async.js","F:\\asd\\leandro\\node_modules\\react-async\\dist-src\\useAsync.js"],"sourcesContent":["/* istanbul ignore file */\n/**\n * Universal global scope object. In the browser this is `self`, in Node.js and React Native it's `global`.\n * This file is excluded from coverage reporting because these globals are environment-specific so we can't test them all.\n */\nconst globalScope = (() => {\n    if (typeof self === \"object\" && self.self === self)\n        return self;\n    if (typeof global === \"object\" && global.global === global)\n        return global;\n    if (typeof global === \"object\" && global.GLOBAL === global)\n        return global;\n    return {}; // fallback that relies on imported modules to be singletons\n})();\n/**\n * Globally available object used to connect the DevTools to all React Async instances.\n */\nglobalScope.__REACT_ASYNC__ = globalScope.__REACT_ASYNC__ || {};\nexport const noop = () => { };\nexport class MockAbortController {\n    constructor() {\n        this.abort = noop;\n        this.signal = {};\n    }\n}\nexport default globalScope;\n","let PropTypes;\ntry {\n    PropTypes = require(\"prop-types\");\n}\ncatch (e) { }\nconst childrenFn = PropTypes && PropTypes.oneOfType([PropTypes.node, PropTypes.func]);\nconst stateObject = PropTypes &&\n    PropTypes.shape({\n        initialValue: PropTypes.any,\n        data: PropTypes.any,\n        error: PropTypes.instanceOf(Error),\n        value: PropTypes.any,\n        startedAt: PropTypes.instanceOf(Date),\n        finishedAt: PropTypes.instanceOf(Date),\n        status: PropTypes.oneOf([\"initial\", \"pending\", \"fulfilled\", \"rejected\"]),\n        isInitial: PropTypes.bool,\n        isPending: PropTypes.bool,\n        isLoading: PropTypes.bool,\n        isFulfilled: PropTypes.bool,\n        isResolved: PropTypes.bool,\n        isRejected: PropTypes.bool,\n        isSettled: PropTypes.bool,\n        counter: PropTypes.number,\n        promise: PropTypes.instanceOf(Promise),\n        run: PropTypes.func,\n        reload: PropTypes.func,\n        cancel: PropTypes.func,\n        setData: PropTypes.func,\n        setError: PropTypes.func,\n    });\nexport default PropTypes && {\n    Async: {\n        children: childrenFn,\n        promise: PropTypes.instanceOf(Promise),\n        promiseFn: PropTypes.func,\n        deferFn: PropTypes.func,\n        watch: PropTypes.any,\n        watchFn: PropTypes.func,\n        initialValue: PropTypes.any,\n        onResolve: PropTypes.func,\n        onReject: PropTypes.func,\n        reducer: PropTypes.func,\n        dispatcher: PropTypes.func,\n        debugLabel: PropTypes.string,\n        suspense: PropTypes.bool,\n    },\n    Initial: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Pending: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        initial: PropTypes.bool,\n    },\n    Fulfilled: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Rejected: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n    Settled: {\n        children: childrenFn,\n        state: stateObject.isRequired,\n        persist: PropTypes.bool,\n    },\n};\n","import React from \"react\";\nimport propTypes from \"./propTypes\";\nconst renderFn = (children, ...args) => {\n    if (typeof children === \"function\") {\n        const render = children;\n        return render(...args);\n    }\n    return children;\n};\n/**\n * Renders only when no promise has started or completed yet.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show until we have data, even while pending (loading) or when an error occurred\n */\nexport const IfInitial = ({ children, persist, state = {}, }) => React.createElement(React.Fragment, null, state.isInitial || (persist && !state.data) ? renderFn(children, state) : null);\n/**\n * Renders only while pending (promise is loading).\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} initial Show only on initial load (data is undefined)\n */\nexport const IfPending = ({ children, initial, state = {}, }) => React.createElement(React.Fragment, null, state.isPending && (!initial || !state.value) ? renderFn(children, state) : null);\n/**\n * Renders only when promise is resolved.\n *\n * @prop {Function|Node} children Function (passing data and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data while pending (promise is loading)\n */\nexport const IfFulfilled = ({ children, persist, state = {}, }) => (React.createElement(React.Fragment, null, state.isFulfilled || (persist && state.data) ? renderFn(children, state.data, state) : null));\n/**\n * Renders only when promise is rejected.\n *\n * @prop {Function|Node} children Function (passing error and state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old error while pending (promise is loading)\n */\nexport const IfRejected = ({ children, persist, state = {}, }) => (React.createElement(React.Fragment, null, state.isRejected || (persist && state.error) ? renderFn(children, state.error, state) : null));\n/**\n * Renders only when promise is fulfilled or rejected.\n *\n * @prop {Function|Node} children Function (passing state) or React node\n * @prop {Object} state React Async state object\n * @prop {boolean} persist Show old data or error while pending (promise is loading)\n */\nexport const IfSettled = ({ children, persist, state = {}, }) => React.createElement(React.Fragment, null, state.isSettled || (persist && state.value) ? renderFn(children, state) : null);\nif (propTypes) {\n    IfInitial.propTypes = propTypes.Initial;\n    IfPending.propTypes = propTypes.Pending;\n    IfFulfilled.propTypes = propTypes.Fulfilled;\n    IfRejected.propTypes = propTypes.Rejected;\n    IfSettled.propTypes = propTypes.Settled;\n}\n","export var StatusTypes;\n(function (StatusTypes) {\n    StatusTypes[\"initial\"] = \"initial\";\n    StatusTypes[\"pending\"] = \"pending\";\n    StatusTypes[\"fulfilled\"] = \"fulfilled\";\n    StatusTypes[\"rejected\"] = \"rejected\";\n})(StatusTypes || (StatusTypes = {}));\nexport const getInitialStatus = (value, promise) => {\n    if (value instanceof Error)\n        return StatusTypes.rejected;\n    if (value !== undefined)\n        return StatusTypes.fulfilled;\n    if (promise)\n        return StatusTypes.pending;\n    return StatusTypes.initial;\n};\nexport const getIdleStatus = (value) => {\n    if (value instanceof Error)\n        return StatusTypes.rejected;\n    if (value !== undefined)\n        return StatusTypes.fulfilled;\n    return StatusTypes.initial;\n};\nexport const getStatusProps = (status) => ({\n    status,\n    isInitial: status === StatusTypes.initial,\n    isPending: status === StatusTypes.pending,\n    isLoading: status === StatusTypes.pending,\n    isFulfilled: status === StatusTypes.fulfilled,\n    isResolved: status === StatusTypes.fulfilled,\n    isRejected: status === StatusTypes.rejected,\n    isSettled: status === StatusTypes.fulfilled || status === StatusTypes.rejected,\n});\n","import { getInitialStatus, getIdleStatus, getStatusProps, StatusTypes } from \"./status\";\n// This exists to make sure we don't hold any references to user-provided functions\n// The way NeverSettle extends from Promise is complicated, but can't be done differently because Babel doesn't support\n// extending built-in classes. See https://babeljs.io/docs/en/caveats/#classes\nconst NeverSettle = function () { };\n/* istanbul ignore next */\nif (Object.setPrototypeOf) {\n    Object.setPrototypeOf(NeverSettle, Promise);\n}\nelse {\n    ;\n    NeverSettle.__proto__ = Promise;\n}\nNeverSettle.prototype = Object.assign(Object.create(Promise.prototype), {\n    finally() {\n        return this;\n    },\n    catch() {\n        return this;\n    },\n    then() {\n        return this;\n    },\n});\nexport const neverSettle = new NeverSettle();\nexport var ActionTypes;\n(function (ActionTypes) {\n    ActionTypes[\"start\"] = \"start\";\n    ActionTypes[\"cancel\"] = \"cancel\";\n    ActionTypes[\"fulfill\"] = \"fulfill\";\n    ActionTypes[\"reject\"] = \"reject\";\n})(ActionTypes || (ActionTypes = {}));\nexport const init = ({ initialValue, promise, promiseFn, }) => ({\n    initialValue,\n    data: initialValue instanceof Error ? undefined : initialValue,\n    error: initialValue instanceof Error ? initialValue : undefined,\n    value: initialValue,\n    startedAt: promise || promiseFn ? new Date() : undefined,\n    finishedAt: initialValue ? new Date() : undefined,\n    ...getStatusProps(getInitialStatus(initialValue, promise || promiseFn)),\n    counter: 0,\n    promise: neverSettle,\n});\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case ActionTypes.start:\n            return {\n                ...state,\n                startedAt: new Date(),\n                finishedAt: undefined,\n                ...getStatusProps(StatusTypes.pending),\n                counter: action.meta.counter,\n                promise: action.meta.promise,\n            };\n        case ActionTypes.cancel:\n            return {\n                ...state,\n                startedAt: undefined,\n                finishedAt: undefined,\n                ...getStatusProps(getIdleStatus(state.error || state.data)),\n                counter: action.meta.counter,\n                promise: action.meta.promise,\n            };\n        case ActionTypes.fulfill:\n            return {\n                ...state,\n                data: action.payload,\n                value: action.payload,\n                error: undefined,\n                finishedAt: new Date(),\n                ...getStatusProps(StatusTypes.fulfilled),\n                promise: action.meta.promise,\n            };\n        case ActionTypes.reject:\n            return {\n                ...state,\n                error: action.payload,\n                value: action.payload,\n                finishedAt: new Date(),\n                ...getStatusProps(StatusTypes.rejected),\n                promise: action.meta.promise,\n            };\n        default:\n            return state;\n    }\n};\nexport const dispatchMiddleware = (dispatch) => (action, ...args) => {\n    dispatch(action, ...args);\n    if (action.type === ActionTypes.start && typeof action.payload === \"function\") {\n        action.payload();\n    }\n};\n","import React from \"react\";\nimport globalScope, { MockAbortController } from \"./globalScope\";\nimport { IfInitial, IfPending, IfFulfilled, IfRejected, IfSettled } from \"./helpers\";\nimport propTypes from \"./propTypes\";\nimport { neverSettle, ActionTypes, init, dispatchMiddleware, reducer as asyncReducer, } from \"./reducer\";\nclass Async extends React.Component {\n}\n/**\n * createInstance allows you to create instances of Async that are bound to a specific promise.\n * A unique instance also uses its own React context for better nesting capability.\n */\nexport function createInstance(defaultOptions = {}, displayName = \"Async\") {\n    const { Consumer: UnguardedConsumer, Provider } = React.createContext(undefined);\n    function Consumer({ children }) {\n        return (React.createElement(UnguardedConsumer, null, value => {\n            if (!value) {\n                throw new Error(\"this component should only be used within an associated <Async> component!\");\n            }\n            return children(value);\n        }));\n    }\n    class Async extends React.Component {\n        constructor(props) {\n            super(props);\n            this.mounted = false;\n            this.counter = 0;\n            this.args = [];\n            this.promise = neverSettle;\n            this.abortController = new MockAbortController();\n            this.start = this.start.bind(this);\n            this.load = this.load.bind(this);\n            this.run = this.run.bind(this);\n            this.cancel = this.cancel.bind(this);\n            this.onResolve = this.onResolve.bind(this);\n            this.onReject = this.onReject.bind(this);\n            this.setData = this.setData.bind(this);\n            this.setError = this.setError.bind(this);\n            const promise = props.promise;\n            const promiseFn = props.promiseFn || defaultOptions.promiseFn;\n            const initialValue = props.initialValue || defaultOptions.initialValue;\n            this.state = {\n                ...init({ initialValue, promise, promiseFn }),\n                cancel: this.cancel,\n                run: this.run,\n                reload: () => {\n                    this.load();\n                    this.run(...this.args);\n                },\n                setData: this.setData,\n                setError: this.setError,\n            };\n            this.debugLabel = props.debugLabel || defaultOptions.debugLabel;\n            const { devToolsDispatcher } = globalScope.__REACT_ASYNC__;\n            const _reducer = props.reducer || defaultOptions.reducer;\n            const _dispatcher = props.dispatcher || defaultOptions.dispatcher || devToolsDispatcher;\n            const reducer = _reducer\n                ? (state, action) => _reducer(state, action, asyncReducer)\n                : asyncReducer;\n            const dispatch = dispatchMiddleware((action, callback) => {\n                this.setState(state => reducer(state, action), callback);\n            });\n            this.dispatch = _dispatcher ? action => _dispatcher(action, dispatch, props) : dispatch;\n        }\n        componentDidMount() {\n            this.mounted = true;\n            if (this.props.promise || !this.state.initialValue) {\n                this.load();\n            }\n        }\n        componentDidUpdate(prevProps) {\n            const { watch, watchFn = defaultOptions.watchFn, promise, promiseFn } = this.props;\n            if (watch !== prevProps.watch) {\n                if (this.counter)\n                    this.cancel();\n                return this.load();\n            }\n            if (watchFn &&\n                watchFn({ ...defaultOptions, ...this.props }, { ...defaultOptions, ...prevProps })) {\n                if (this.counter)\n                    this.cancel();\n                return this.load();\n            }\n            if (promise !== prevProps.promise) {\n                if (this.counter)\n                    this.cancel();\n                if (promise)\n                    return this.load();\n            }\n            if (promiseFn !== prevProps.promiseFn) {\n                if (this.counter)\n                    this.cancel();\n                if (promiseFn)\n                    return this.load();\n            }\n        }\n        componentWillUnmount() {\n            this.cancel();\n            this.mounted = false;\n        }\n        getMeta(meta) {\n            return {\n                counter: this.counter,\n                promise: this.promise,\n                debugLabel: this.debugLabel,\n                ...meta,\n            };\n        }\n        start(promiseFn) {\n            if (\"AbortController\" in globalScope) {\n                this.abortController.abort();\n                this.abortController = new globalScope.AbortController();\n            }\n            this.counter++;\n            return (this.promise = new Promise((resolve, reject) => {\n                if (!this.mounted)\n                    return;\n                const executor = () => promiseFn().then(resolve, reject);\n                this.dispatch({ type: ActionTypes.start, payload: executor, meta: this.getMeta() });\n            }));\n        }\n        load() {\n            const promise = this.props.promise;\n            const promiseFn = this.props.promiseFn || defaultOptions.promiseFn;\n            if (promise) {\n                this.start(() => promise)\n                    .then(this.onResolve(this.counter))\n                    .catch(this.onReject(this.counter));\n            }\n            else if (promiseFn) {\n                const props = { ...defaultOptions, ...this.props };\n                this.start(() => promiseFn(props, this.abortController))\n                    .then(this.onResolve(this.counter))\n                    .catch(this.onReject(this.counter));\n            }\n        }\n        run(...args) {\n            const deferFn = this.props.deferFn || defaultOptions.deferFn;\n            if (deferFn) {\n                this.args = args;\n                const props = { ...defaultOptions, ...this.props };\n                return this.start(() => deferFn(args, props, this.abortController)).then(this.onResolve(this.counter), this.onReject(this.counter));\n            }\n        }\n        cancel() {\n            const onCancel = this.props.onCancel || defaultOptions.onCancel;\n            onCancel && onCancel();\n            this.counter++;\n            this.abortController.abort();\n            this.mounted && this.dispatch({ type: ActionTypes.cancel, meta: this.getMeta() });\n        }\n        onResolve(counter) {\n            return (data) => {\n                if (this.counter === counter) {\n                    const onResolve = this.props.onResolve || defaultOptions.onResolve;\n                    this.setData(data, () => onResolve && onResolve(data));\n                }\n                return data;\n            };\n        }\n        onReject(counter) {\n            return (error) => {\n                if (this.counter === counter) {\n                    const onReject = this.props.onReject || defaultOptions.onReject;\n                    this.setError(error, () => onReject && onReject(error));\n                }\n                return error;\n            };\n        }\n        setData(data, callback) {\n            this.mounted &&\n                this.dispatch({ type: ActionTypes.fulfill, payload: data, meta: this.getMeta() }, callback);\n            return data;\n        }\n        setError(error, callback) {\n            this.mounted &&\n                this.dispatch({ type: ActionTypes.reject, payload: error, error: true, meta: this.getMeta() }, callback);\n            return error;\n        }\n        render() {\n            const { children, suspense } = this.props;\n            if (suspense && this.state.isPending && this.promise !== neverSettle) {\n                // Rely on Suspense to handle the loading state\n                throw this.promise;\n            }\n            if (typeof children === \"function\") {\n                const render = children;\n                return React.createElement(Provider, { value: this.state }, render(this.state));\n            }\n            if (children !== undefined && children !== null) {\n                return React.createElement(Provider, { value: this.state }, children);\n            }\n            return null;\n        }\n    }\n    if (propTypes)\n        Async.propTypes = propTypes.Async;\n    const AsyncInitial = props => (React.createElement(Consumer, null, st => React.createElement(IfInitial, Object.assign({}, props, { state: st }))));\n    const AsyncPending = props => (React.createElement(Consumer, null, st => React.createElement(IfPending, Object.assign({}, props, { state: st }))));\n    const AsyncFulfilled = props => (React.createElement(Consumer, null, st => React.createElement(IfFulfilled, Object.assign({}, props, { state: st }))));\n    const AsyncRejected = props => (React.createElement(Consumer, null, st => React.createElement(IfRejected, Object.assign({}, props, { state: st }))));\n    const AsyncSettled = props => (React.createElement(Consumer, null, st => React.createElement(IfSettled, Object.assign({}, props, { state: st }))));\n    AsyncInitial.displayName = `${displayName}.Initial`;\n    AsyncPending.displayName = `${displayName}.Pending`;\n    AsyncFulfilled.displayName = `${displayName}.Fulfilled`;\n    AsyncRejected.displayName = `${displayName}.Rejected`;\n    AsyncSettled.displayName = `${displayName}.Settled`;\n    return Object.assign(Async, {\n        displayName: displayName,\n        Initial: AsyncInitial,\n        Pending: AsyncPending,\n        Loading: AsyncPending,\n        Fulfilled: AsyncFulfilled,\n        Resolved: AsyncFulfilled,\n        Rejected: AsyncRejected,\n        Settled: AsyncSettled,\n    });\n}\nexport default createInstance();\n","import { useCallback, useDebugValue, useEffect, useMemo, useRef, useReducer } from \"react\";\nimport globalScope, { MockAbortController, noop } from \"./globalScope\";\nimport { neverSettle, ActionTypes, init, dispatchMiddleware, reducer as asyncReducer, } from \"./reducer\";\nfunction useAsync(arg1, arg2) {\n    const options = typeof arg1 === \"function\"\n        ? {\n            ...arg2,\n            promiseFn: arg1,\n        }\n        : arg1;\n    const counter = useRef(0);\n    const isMounted = useRef(true);\n    const lastArgs = useRef(undefined);\n    const lastOptions = useRef(options);\n    const lastPromise = useRef(neverSettle);\n    const abortController = useRef(new MockAbortController());\n    const { devToolsDispatcher } = globalScope.__REACT_ASYNC__;\n    const { reducer, dispatcher = devToolsDispatcher } = options;\n    const [state, _dispatch] = useReducer(reducer ? (state, action) => reducer(state, action, asyncReducer) : asyncReducer, options, init);\n    const dispatch = useCallback(dispatcher\n        ? action => dispatcher(action, dispatchMiddleware(_dispatch), lastOptions.current)\n        : dispatchMiddleware(_dispatch), [dispatcher]);\n    const { debugLabel } = options;\n    const getMeta = useCallback((meta) => ({\n        counter: counter.current,\n        promise: lastPromise.current,\n        debugLabel,\n        ...meta,\n    }), [debugLabel]);\n    const setData = useCallback((data, callback = noop) => {\n        if (isMounted.current) {\n            dispatch({\n                type: ActionTypes.fulfill,\n                payload: data,\n                meta: getMeta(),\n            });\n            callback();\n        }\n        return data;\n    }, [dispatch, getMeta]);\n    const setError = useCallback((error, callback = noop) => {\n        if (isMounted.current) {\n            dispatch({\n                type: ActionTypes.reject,\n                payload: error,\n                error: true,\n                meta: getMeta(),\n            });\n            callback();\n        }\n        return error;\n    }, [dispatch, getMeta]);\n    const { onResolve, onReject } = options;\n    const handleResolve = useCallback(count => (data) => count === counter.current && setData(data, () => onResolve && onResolve(data)), [setData, onResolve]);\n    const handleReject = useCallback(count => (err) => count === counter.current && setError(err, () => onReject && onReject(err)), [setError, onReject]);\n    const start = useCallback(promiseFn => {\n        if (\"AbortController\" in globalScope) {\n            abortController.current.abort();\n            abortController.current = new globalScope.AbortController();\n        }\n        counter.current++;\n        return (lastPromise.current = new Promise((resolve, reject) => {\n            if (!isMounted.current)\n                return;\n            const executor = () => promiseFn().then(resolve, reject);\n            dispatch({\n                type: ActionTypes.start,\n                payload: executor,\n                meta: getMeta(),\n            });\n        }));\n    }, [dispatch, getMeta]);\n    const { promise, promiseFn, initialValue } = options;\n    const load = useCallback(() => {\n        const isPreInitialized = initialValue && counter.current === 0;\n        if (promise) {\n            start(() => promise)\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n        else if (promiseFn && !isPreInitialized) {\n            start(() => promiseFn(lastOptions.current, abortController.current))\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n    }, [start, promise, promiseFn, initialValue, handleResolve, handleReject]);\n    const { deferFn } = options;\n    const run = useCallback((...args) => {\n        if (deferFn) {\n            lastArgs.current = args;\n            start(() => deferFn(args, lastOptions.current, abortController.current))\n                .then(handleResolve(counter.current))\n                .catch(handleReject(counter.current));\n        }\n    }, [start, deferFn, handleResolve, handleReject]);\n    const reload = useCallback(() => {\n        lastArgs.current ? run(...lastArgs.current) : load();\n    }, [run, load]);\n    const { onCancel } = options;\n    const cancel = useCallback(() => {\n        onCancel && onCancel();\n        counter.current++;\n        abortController.current.abort();\n        isMounted.current &&\n            dispatch({\n                type: ActionTypes.cancel,\n                meta: getMeta(),\n            });\n    }, [onCancel, dispatch, getMeta]);\n    /* These effects should only be triggered on changes to specific props */\n    /* eslint-disable react-hooks/exhaustive-deps */\n    const { watch, watchFn } = options;\n    useEffect(() => {\n        if (watchFn && lastOptions.current && watchFn(options, lastOptions.current)) {\n            lastOptions.current = options;\n            load();\n        }\n    });\n    useEffect(() => {\n        lastOptions.current = options;\n    }, [options]);\n    useEffect(() => {\n        if (counter.current)\n            cancel();\n        if (promise || promiseFn)\n            load();\n    }, [promise, promiseFn, watch]);\n    useEffect(() => () => {\n        isMounted.current = false;\n    }, []);\n    useEffect(() => () => cancel(), []);\n    /* eslint-enable react-hooks/exhaustive-deps */\n    useDebugValue(state, ({ status }) => `[${counter.current}] ${status}`);\n    if (options.suspense && state.isPending && lastPromise.current !== neverSettle) {\n        // Rely on Suspense to handle the loading state\n        throw lastPromise.current;\n    }\n    return useMemo(() => ({\n        ...state,\n        run,\n        reload,\n        cancel,\n        setData,\n        setError,\n    }), [state, run, reload, cancel, setData, setError]);\n}\nexport class FetchError extends Error {\n    constructor(response) {\n        super(`${response.status} ${response.statusText}`);\n        this.response = response;\n        /* istanbul ignore next */\n        if (Object.setPrototypeOf) {\n            // Not available in IE 10, but can be polyfilled\n            Object.setPrototypeOf(this, FetchError.prototype);\n        }\n    }\n}\nconst parseResponse = (accept, json) => (res) => {\n    if (!res.ok)\n        return Promise.reject(new FetchError(res));\n    if (typeof json === \"boolean\")\n        return json ? res.json() : res;\n    return accept === \"application/json\" ? res.json() : res;\n};\nfunction isEvent(e) {\n    return typeof e === \"object\" && \"preventDefault\" in e;\n}\n/**\n *\n * @param {RequestInfo} resource\n * @param {RequestInit} init\n * @param {FetchOptions} options\n * @returns {AsyncState<T, FetchRun<T>>}\n */\nfunction useAsyncFetch(resource, init, { defer, json, ...options } = {}) {\n    const method = resource.method || (init && init.method);\n    const headers = resource.headers || (init && init.headers) || {};\n    const accept = headers[\"Accept\"] || headers[\"accept\"] || (headers.get && headers.get(\"accept\"));\n    const doFetch = (input, init) => globalScope.fetch(input, init).then(parseResponse(accept, json));\n    const isDefer = typeof defer === \"boolean\" ? defer : [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].indexOf(method) !== -1;\n    const fn = isDefer ? \"deferFn\" : \"promiseFn\";\n    const identity = JSON.stringify({\n        resource,\n        init,\n        isDefer,\n    });\n    const promiseFn = useCallback((_, { signal }) => {\n        return doFetch(resource, { signal, ...init });\n    }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    const deferFn = useCallback(function ([override], _, { signal }) {\n        if (!override || isEvent(override)) {\n            return doFetch(resource, { signal, ...init });\n        }\n        if (typeof override === \"function\") {\n            const { resource: runResource, ...runInit } = override({ resource, signal, ...init });\n            return doFetch(runResource || resource, { signal, ...runInit });\n        }\n        const { resource: runResource, ...runInit } = override;\n        return doFetch(runResource || resource, { signal, ...init, ...runInit });\n    }, [identity] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    const state = useAsync({\n        ...options,\n        [fn]: isDefer ? deferFn : promiseFn,\n    });\n    useDebugValue(state, ({ counter, status }) => `[${counter}] ${status}`);\n    return state;\n}\nconst unsupported = () => {\n    throw new Error(\"useAsync requires React v16.8 or up. Upgrade your React version or use the <Async> component instead.\");\n};\nexport default useEffect ? useAsync : unsupported;\nexport const useFetch = useEffect ? useAsyncFetch : unsupported;\n"]},"metadata":{},"sourceType":"module"}